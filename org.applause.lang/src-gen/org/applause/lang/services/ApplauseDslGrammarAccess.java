/*
* generated by Xtext
*/

package org.applause.lang.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ApplauseDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ApplauseModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplauseModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cApplicationAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cApplicationApplicationParserRuleCall_0_0 = (RuleCall)cApplicationAssignment_0.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsModelElementParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		
		//ApplauseModel:
		//	application=Application elements+=ModelElement*;
		public ParserRule getRule() { return rule; }

		//application=Application elements+=ModelElement*
		public Group getGroup() { return cGroup; }

		//application=Application
		public Assignment getApplicationAssignment_0() { return cApplicationAssignment_0; }

		//Application
		public RuleCall getApplicationApplicationParserRuleCall_0_0() { return cApplicationApplicationParserRuleCall_0_0; }

		//elements+=ModelElement*
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }

		//ModelElement
		public RuleCall getElementsModelElementParserRuleCall_1_0() { return cElementsModelElementParserRuleCall_1_0; }
	}

	public class ModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContentProviderParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cViewParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConstantParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cNavigationBarItemParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ModelElement:
		//	Type | ContentProvider | View | Constant | NavigationBarItem;
		public ParserRule getRule() { return rule; }

		//Type | ContentProvider | View | Constant | NavigationBarItem
		public Alternatives getAlternatives() { return cAlternatives; }

		//Type
		public RuleCall getTypeParserRuleCall_0() { return cTypeParserRuleCall_0; }

		//ContentProvider
		public RuleCall getContentProviderParserRuleCall_1() { return cContentProviderParserRuleCall_1; }

		//View
		public RuleCall getViewParserRuleCall_2() { return cViewParserRuleCall_2; }

		//Constant
		public RuleCall getConstantParserRuleCall_3() { return cConstantParserRuleCall_3; }

		//NavigationBarItem
		public RuleCall getNavigationBarItemParserRuleCall_4() { return cNavigationBarItemParserRuleCall_4; }
	}

	public class NavigationBarItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NavigationBarItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNavigationBarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPositionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPositionPositionEnumRuleCall_1_0 = (RuleCall)cPositionAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cIconKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cIconAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cIconScalarExpressionParserRuleCall_4_0_2_0 = (RuleCall)cIconAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cTriggersKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cTriggersAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cTriggersScalarExpressionParserRuleCall_4_1_2_0 = (RuleCall)cTriggersAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_1_3 = (Group)cGroup_4_1.eContents().get(3);
		private final Keyword cCommaKeyword_4_1_3_0 = (Keyword)cGroup_4_1_3.eContents().get(0);
		private final Assignment cTriggersAssignment_4_1_3_1 = (Assignment)cGroup_4_1_3.eContents().get(1);
		private final RuleCall cTriggersScalarExpressionParserRuleCall_4_1_3_1_0 = (RuleCall)cTriggersAssignment_4_1_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//NavigationBarItem:
		//	"navigationBar." position=Position "=" "{" (("icon" "=" icon=ScalarExpression)? & ("triggers" "="
		//	triggers+=ScalarExpression ("," triggers+=ScalarExpression)*)?) "}";
		public ParserRule getRule() { return rule; }

		//"navigationBar." position=Position "=" "{" (("icon" "=" icon=ScalarExpression)? & ("triggers" "="
		//triggers+=ScalarExpression ("," triggers+=ScalarExpression)*)?) "}"
		public Group getGroup() { return cGroup; }

		//"navigationBar."
		public Keyword getNavigationBarKeyword_0() { return cNavigationBarKeyword_0; }

		//position=Position
		public Assignment getPositionAssignment_1() { return cPositionAssignment_1; }

		//Position
		public RuleCall getPositionPositionEnumRuleCall_1_0() { return cPositionPositionEnumRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("icon" "=" icon=ScalarExpression)? & ("triggers" "=" triggers+=ScalarExpression ("," triggers+=ScalarExpression)*)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//("icon" "=" icon=ScalarExpression)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"icon"
		public Keyword getIconKeyword_4_0_0() { return cIconKeyword_4_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }

		//icon=ScalarExpression
		public Assignment getIconAssignment_4_0_2() { return cIconAssignment_4_0_2; }

		//ScalarExpression
		public RuleCall getIconScalarExpressionParserRuleCall_4_0_2_0() { return cIconScalarExpressionParserRuleCall_4_0_2_0; }

		//("triggers" "=" triggers+=ScalarExpression ("," triggers+=ScalarExpression)*)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"triggers"
		public Keyword getTriggersKeyword_4_1_0() { return cTriggersKeyword_4_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }

		//triggers+=ScalarExpression
		public Assignment getTriggersAssignment_4_1_2() { return cTriggersAssignment_4_1_2; }

		//ScalarExpression
		public RuleCall getTriggersScalarExpressionParserRuleCall_4_1_2_0() { return cTriggersScalarExpressionParserRuleCall_4_1_2_0; }

		//("," triggers+=ScalarExpression)*
		public Group getGroup_4_1_3() { return cGroup_4_1_3; }

		//","
		public Keyword getCommaKeyword_4_1_3_0() { return cCommaKeyword_4_1_3_0; }

		//triggers+=ScalarExpression
		public Assignment getTriggersAssignment_4_1_3_1() { return cTriggersAssignment_4_1_3_1; }

		//ScalarExpression
		public RuleCall getTriggersScalarExpressionParserRuleCall_4_1_3_1_0() { return cTriggersScalarExpressionParserRuleCall_4_1_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class VariableDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VariableDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCollectionIteratorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// -------------------------------------------
		//// General
		//// common supertype to allow variableReferences
		//VariableDeclaration:
		//	Parameter | Property | CollectionIterator;
		public ParserRule getRule() { return rule; }

		//Parameter | Property | CollectionIterator
		public Alternatives getAlternatives() { return cAlternatives; }

		//Parameter
		public RuleCall getParameterParserRuleCall_0() { return cParameterParserRuleCall_0; }

		//Property
		public RuleCall getPropertyParserRuleCall_1() { return cPropertyParserRuleCall_1; }

		//CollectionIterator
		public RuleCall getCollectionIteratorParserRuleCall_2() { return cCollectionIteratorParserRuleCall_2; }
	}

	public class TypeDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cManyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cManyLeftSquareBracketRightSquareBracketKeyword_1_0 = (Keyword)cManyAssignment_1.eContents().get(0);
		
		//TypeDescription:
		//	type=[Type] many?="[]"?;
		public ParserRule getRule() { return rule; }

		//type=[Type] many?="[]"?
		public Group getGroup() { return cGroup; }

		//type=[Type]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_0_0() { return cTypeTypeCrossReference_0_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_0_0_1() { return cTypeTypeIDTerminalRuleCall_0_0_1; }

		//many?="[]"?
		public Assignment getManyAssignment_1() { return cManyAssignment_1; }

		//"[]"
		public Keyword getManyLeftSquareBracketRightSquareBracketKeyword_1_0() { return cManyLeftSquareBracketRightSquareBracketKeyword_1_0; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionTypeDescriptionParserRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Parameter:
		//	description=TypeDescription name=ID;
		public ParserRule getRule() { return rule; }

		//description=TypeDescription name=ID
		public Group getGroup() { return cGroup; }

		//description=TypeDescription
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//TypeDescription
		public RuleCall getDescriptionTypeDescriptionParserRuleCall_0_0() { return cDescriptionTypeDescriptionParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ObjectReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cObjectVariableDeclarationCrossReference_0_0 = (CrossReference)cObjectAssignment_0.eContents().get(0);
		private final RuleCall cObjectVariableDeclarationIDTerminalRuleCall_0_0_1 = (RuleCall)cObjectVariableDeclarationCrossReference_0_0.eContents().get(1);
		private final Assignment cTailAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTailNestedObjectReferenceParserRuleCall_1_0 = (RuleCall)cTailAssignment_1.eContents().get(0);
		
		//ObjectReference:
		//	object=[VariableDeclaration] tail=NestedObjectReference?;
		public ParserRule getRule() { return rule; }

		//object=[VariableDeclaration] tail=NestedObjectReference?
		public Group getGroup() { return cGroup; }

		//object=[VariableDeclaration]
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }

		//[VariableDeclaration]
		public CrossReference getObjectVariableDeclarationCrossReference_0_0() { return cObjectVariableDeclarationCrossReference_0_0; }

		//ID
		public RuleCall getObjectVariableDeclarationIDTerminalRuleCall_0_0_1() { return cObjectVariableDeclarationIDTerminalRuleCall_0_0_1; }

		//tail=NestedObjectReference?
		public Assignment getTailAssignment_1() { return cTailAssignment_1; }

		//NestedObjectReference
		public RuleCall getTailNestedObjectReferenceParserRuleCall_1_0() { return cTailNestedObjectReferenceParserRuleCall_1_0; }
	}

	public class NestedObjectReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedObjectReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjectVariableDeclarationCrossReference_1_0 = (CrossReference)cObjectAssignment_1.eContents().get(0);
		private final RuleCall cObjectVariableDeclarationIDTerminalRuleCall_1_0_1 = (RuleCall)cObjectVariableDeclarationCrossReference_1_0.eContents().get(1);
		private final Assignment cTailAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTailNestedObjectReferenceParserRuleCall_2_0 = (RuleCall)cTailAssignment_2.eContents().get(0);
		
		////workaround: NestedObjectReference as separate rule to guide the content 
		////   assist parser technically could have been include in ObjectReference like
		////   ObjectReference:
		////     object=[VariableDeclaration] ('.' tail=ObjectReference)?;
		//NestedObjectReference returns ObjectReference:
		//	"." object=[VariableDeclaration] tail=NestedObjectReference?;
		public ParserRule getRule() { return rule; }

		//"." object=[VariableDeclaration] tail=NestedObjectReference?
		public Group getGroup() { return cGroup; }

		//"."
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }

		//object=[VariableDeclaration]
		public Assignment getObjectAssignment_1() { return cObjectAssignment_1; }

		//[VariableDeclaration]
		public CrossReference getObjectVariableDeclarationCrossReference_1_0() { return cObjectVariableDeclarationCrossReference_1_0; }

		//ID
		public RuleCall getObjectVariableDeclarationIDTerminalRuleCall_1_0_1() { return cObjectVariableDeclarationIDTerminalRuleCall_1_0_1; }

		//tail=NestedObjectReference?
		public Assignment getTailAssignment_2() { return cTailAssignment_2; }

		//NestedObjectReference
		public RuleCall getTailNestedObjectReferenceParserRuleCall_2_0() { return cTailNestedObjectReferenceParserRuleCall_2_0; }
	}

	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCollectionLiteralParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCollectionFunctionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectReferenceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Expression:
		//	StringLiteral | StringFunction | CollectionLiteral | CollectionFunction | ObjectReference;
		public ParserRule getRule() { return rule; }

		//StringLiteral | StringFunction | CollectionLiteral | CollectionFunction | ObjectReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_0() { return cStringLiteralParserRuleCall_0; }

		//StringFunction
		public RuleCall getStringFunctionParserRuleCall_1() { return cStringFunctionParserRuleCall_1; }

		//CollectionLiteral
		public RuleCall getCollectionLiteralParserRuleCall_2() { return cCollectionLiteralParserRuleCall_2; }

		//CollectionFunction
		public RuleCall getCollectionFunctionParserRuleCall_3() { return cCollectionFunctionParserRuleCall_3; }

		//ObjectReference
		public RuleCall getObjectReferenceParserRuleCall_4() { return cObjectReferenceParserRuleCall_4; }
	}

	public class ScalarExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScalarExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjectReferenceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ScalarExpression:
		//	StringLiteral | StringFunction | ObjectReference;
		public ParserRule getRule() { return rule; }

		//StringLiteral | StringFunction | ObjectReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_0() { return cStringLiteralParserRuleCall_0; }

		//StringFunction
		public RuleCall getStringFunctionParserRuleCall_1() { return cStringFunctionParserRuleCall_1; }

		//ObjectReference
		public RuleCall getObjectReferenceParserRuleCall_2() { return cObjectReferenceParserRuleCall_2; }
	}

	public class CollectionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectionExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCollectionLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCollectionFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjectReferenceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//CollectionExpression:
		//	CollectionLiteral | CollectionFunction | ObjectReference;
		public ParserRule getRule() { return rule; }

		//CollectionLiteral | CollectionFunction | ObjectReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//CollectionLiteral
		public RuleCall getCollectionLiteralParserRuleCall_0() { return cCollectionLiteralParserRuleCall_0; }

		//CollectionFunction
		public RuleCall getCollectionFunctionParserRuleCall_1() { return cCollectionFunctionParserRuleCall_1; }

		//ObjectReference
		public RuleCall getObjectReferenceParserRuleCall_2() { return cObjectReferenceParserRuleCall_2; }
	}

	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteral:
		//	value=STRING;
		public ParserRule getRule() { return rule; }

		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}

	public class PredefinedParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PredefinedParameter");
		private final RuleCall cSectionIdParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PredefinedParameter:
		//	SectionId;
		public ParserRule getRule() { return rule; }

		//SectionId
		public RuleCall getSectionIdParserRuleCall() { return cSectionIdParserRuleCall; }
	}

	public class SectionIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSectionIdAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSectionIdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//SectionId:
		//	{SectionId} "section.id";
		public ParserRule getRule() { return rule; }

		//{SectionId} "section.id"
		public Group getGroup() { return cGroup; }

		//{SectionId}
		public Action getSectionIdAction_0() { return cSectionIdAction_0; }

		//"section.id"
		public Keyword getSectionIdKeyword_1() { return cSectionIdKeyword_1; }
	}

	public class StringFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cStringConcatAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValuesAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cValuesScalarExpressionParserRuleCall_0_2_0 = (RuleCall)cValuesAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cStringReplaceAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cReplaceKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValueScalarExpressionParserRuleCall_1_2_0 = (RuleCall)cValueAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cMatchAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cMatchScalarExpressionParserRuleCall_1_4_0 = (RuleCall)cMatchAssignment_1_4.eContents().get(0);
		private final Keyword cCommaKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cReplacementAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cReplacementScalarExpressionParserRuleCall_1_6_0 = (RuleCall)cReplacementAssignment_1_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cStringUrlConformAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cUrlconformKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cValueAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cValueScalarExpressionParserRuleCall_2_2_0 = (RuleCall)cValueAssignment_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//StringFunction:
		//	{StringConcat} "(" values+=ScalarExpression+ ")" | {StringReplace} "replace(" value=ScalarExpression ","
		//	match=ScalarExpression "," replacement=ScalarExpression ")" | {StringUrlConform} "urlconform(" value=ScalarExpression
		//	")";
		public ParserRule getRule() { return rule; }

		//{StringConcat} "(" values+=ScalarExpression+ ")" | {StringReplace} "replace(" value=ScalarExpression ","
		//match=ScalarExpression "," replacement=ScalarExpression ")" | {StringUrlConform} "urlconform(" value=ScalarExpression
		//")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{StringConcat} "(" values+=ScalarExpression+ ")"
		public Group getGroup_0() { return cGroup_0; }

		//{StringConcat}
		public Action getStringConcatAction_0_0() { return cStringConcatAction_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }

		//values+=ScalarExpression+
		public Assignment getValuesAssignment_0_2() { return cValuesAssignment_0_2; }

		//ScalarExpression
		public RuleCall getValuesScalarExpressionParserRuleCall_0_2_0() { return cValuesScalarExpressionParserRuleCall_0_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }

		//{StringReplace} "replace(" value=ScalarExpression "," match=ScalarExpression "," replacement=ScalarExpression ")"
		public Group getGroup_1() { return cGroup_1; }

		//{StringReplace}
		public Action getStringReplaceAction_1_0() { return cStringReplaceAction_1_0; }

		//"replace("
		public Keyword getReplaceKeyword_1_1() { return cReplaceKeyword_1_1; }

		//value=ScalarExpression
		public Assignment getValueAssignment_1_2() { return cValueAssignment_1_2; }

		//ScalarExpression
		public RuleCall getValueScalarExpressionParserRuleCall_1_2_0() { return cValueScalarExpressionParserRuleCall_1_2_0; }

		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }

		//match=ScalarExpression
		public Assignment getMatchAssignment_1_4() { return cMatchAssignment_1_4; }

		//ScalarExpression
		public RuleCall getMatchScalarExpressionParserRuleCall_1_4_0() { return cMatchScalarExpressionParserRuleCall_1_4_0; }

		//","
		public Keyword getCommaKeyword_1_5() { return cCommaKeyword_1_5; }

		//replacement=ScalarExpression
		public Assignment getReplacementAssignment_1_6() { return cReplacementAssignment_1_6; }

		//ScalarExpression
		public RuleCall getReplacementScalarExpressionParserRuleCall_1_6_0() { return cReplacementScalarExpressionParserRuleCall_1_6_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_7() { return cRightParenthesisKeyword_1_7; }

		//{StringUrlConform} "urlconform(" value=ScalarExpression ")"
		public Group getGroup_2() { return cGroup_2; }

		//{StringUrlConform}
		public Action getStringUrlConformAction_2_0() { return cStringUrlConformAction_2_0; }

		//"urlconform("
		public Keyword getUrlconformKeyword_2_1() { return cUrlconformKeyword_2_1; }

		//value=ScalarExpression
		public Assignment getValueAssignment_2_2() { return cValueAssignment_2_2; }

		//ScalarExpression
		public RuleCall getValueScalarExpressionParserRuleCall_2_2_0() { return cValueScalarExpressionParserRuleCall_2_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}

	public class CollectionLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectionLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cItemsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cItemsScalarExpressionParserRuleCall_1_0 = (RuleCall)cItemsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cItemsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cItemsScalarExpressionParserRuleCall_2_1_0 = (RuleCall)cItemsAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//CollectionLiteral:
		//	"[" items+=ScalarExpression ("," items+=ScalarExpression)* "]";
		public ParserRule getRule() { return rule; }

		//"[" items+=ScalarExpression ("," items+=ScalarExpression)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//items+=ScalarExpression
		public Assignment getItemsAssignment_1() { return cItemsAssignment_1; }

		//ScalarExpression
		public RuleCall getItemsScalarExpressionParserRuleCall_1_0() { return cItemsScalarExpressionParserRuleCall_1_0; }

		//("," items+=ScalarExpression)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//items+=ScalarExpression
		public Assignment getItemsAssignment_2_1() { return cItemsAssignment_2_1; }

		//ScalarExpression
		public RuleCall getItemsScalarExpressionParserRuleCall_2_1_0() { return cItemsScalarExpressionParserRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class CollectionFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectionFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringSplitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSplitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueScalarExpressionParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDelimiterAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDelimiterScalarExpressionParserRuleCall_4_0 = (RuleCall)cDelimiterAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CollectionFunction:
		//	{StringSplit} "split(" value=ScalarExpression "," delimiter=ScalarExpression ")";
		public ParserRule getRule() { return rule; }

		//{StringSplit} "split(" value=ScalarExpression "," delimiter=ScalarExpression ")"
		public Group getGroup() { return cGroup; }

		//{StringSplit}
		public Action getStringSplitAction_0() { return cStringSplitAction_0; }

		//"split("
		public Keyword getSplitKeyword_1() { return cSplitKeyword_1; }

		//value=ScalarExpression
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//ScalarExpression
		public RuleCall getValueScalarExpressionParserRuleCall_2_0() { return cValueScalarExpressionParserRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//delimiter=ScalarExpression
		public Assignment getDelimiterAssignment_4() { return cDelimiterAssignment_4; }

		//ScalarExpression
		public RuleCall getDelimiterScalarExpressionParserRuleCall_4_0() { return cDelimiterScalarExpressionParserRuleCall_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cTabbarApplicationAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cTabbarApplicationTabbarAppKeyword_0_0_0 = (Keyword)cTabbarApplicationAssignment_0_0.eContents().get(0);
		private final Keyword cAppKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAppiconKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAppiconAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAppiconScalarExpressionParserRuleCall_5_0 = (RuleCall)cAppiconAssignment_5.eContents().get(0);
		private final Keyword cSplashKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSplashAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSplashScalarExpressionParserRuleCall_8_0 = (RuleCall)cSplashAssignment_8.eContents().get(0);
		private final Keyword cMainviewKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEqualsSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cMainviewAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMainviewViewCallParserRuleCall_11_0 = (RuleCall)cMainviewAssignment_11.eContents().get(0);
		private final Assignment cButtonsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cButtonsButtonParserRuleCall_12_0 = (RuleCall)cButtonsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//// -------------------------------------------
		//// applications
		//Application:
		//	(tabbarApplication?="tabbarApp" | "app") name=ID "{" "appicon" "=" appicon=ScalarExpression "splash" "="
		//	splash=ScalarExpression "mainview" "=" mainview=ViewCall buttons+=Button* "}";
		public ParserRule getRule() { return rule; }

		//(tabbarApplication?="tabbarApp" | "app") name=ID "{" "appicon" "=" appicon=ScalarExpression "splash" "="
		//splash=ScalarExpression "mainview" "=" mainview=ViewCall buttons+=Button* "}"
		public Group getGroup() { return cGroup; }

		//tabbarApplication?="tabbarApp" | "app"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//tabbarApplication?="tabbarApp"
		public Assignment getTabbarApplicationAssignment_0_0() { return cTabbarApplicationAssignment_0_0; }

		//"tabbarApp"
		public Keyword getTabbarApplicationTabbarAppKeyword_0_0_0() { return cTabbarApplicationTabbarAppKeyword_0_0_0; }

		//"app"
		public Keyword getAppKeyword_0_1() { return cAppKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"appicon"
		public Keyword getAppiconKeyword_3() { return cAppiconKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//appicon=ScalarExpression
		public Assignment getAppiconAssignment_5() { return cAppiconAssignment_5; }

		//ScalarExpression
		public RuleCall getAppiconScalarExpressionParserRuleCall_5_0() { return cAppiconScalarExpressionParserRuleCall_5_0; }

		//"splash"
		public Keyword getSplashKeyword_6() { return cSplashKeyword_6; }

		//"="
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }

		//splash=ScalarExpression
		public Assignment getSplashAssignment_8() { return cSplashAssignment_8; }

		//ScalarExpression
		public RuleCall getSplashScalarExpressionParserRuleCall_8_0() { return cSplashScalarExpressionParserRuleCall_8_0; }

		//"mainview"
		public Keyword getMainviewKeyword_9() { return cMainviewKeyword_9; }

		//"="
		public Keyword getEqualsSignKeyword_10() { return cEqualsSignKeyword_10; }

		//mainview=ViewCall
		public Assignment getMainviewAssignment_11() { return cMainviewAssignment_11; }

		//ViewCall
		public RuleCall getMainviewViewCallParserRuleCall_11_0() { return cMainviewViewCallParserRuleCall_11_0; }

		//buttons+=Button*
		public Assignment getButtonsAssignment_12() { return cButtonsAssignment_12; }

		//Button
		public RuleCall getButtonsButtonParserRuleCall_12_0() { return cButtonsButtonParserRuleCall_12_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class ButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Button");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cButtonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cTitleKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Assignment cTitleAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final RuleCall cTitleScalarExpressionParserRuleCall_0_2_2_0 = (RuleCall)cTitleAssignment_0_2_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cIconKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cIconAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cIconScalarExpressionParserRuleCall_1_2_0 = (RuleCall)cIconAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cGroup_2.eContents().get(0);
		private final Group cGroup_2_0_0 = (Group)cAlternatives_2_0.eContents().get(0);
		private final Keyword cViewKeyword_2_0_0_0 = (Keyword)cGroup_2_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_0_1 = (Keyword)cGroup_2_0_0.eContents().get(1);
		private final Assignment cViewAssignment_2_0_0_2 = (Assignment)cGroup_2_0_0.eContents().get(2);
		private final RuleCall cViewViewCallParserRuleCall_2_0_0_2_0 = (RuleCall)cViewAssignment_2_0_0_2.eContents().get(0);
		private final Group cGroup_2_0_1 = (Group)cAlternatives_2_0.eContents().get(1);
		private final Keyword cHandlerKeyword_2_0_1_0 = (Keyword)cGroup_2_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_1_1 = (Keyword)cGroup_2_0_1.eContents().get(1);
		private final Assignment cHandlerAssignment_2_0_1_2 = (Assignment)cGroup_2_0_1.eContents().get(2);
		private final RuleCall cHandlerSTRINGTerminalRuleCall_2_0_1_2_0 = (RuleCall)cHandlerAssignment_2_0_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//Button:
		//	"button" "{" ("title" "=" title=ScalarExpression)? & ("icon" "=" icon=ScalarExpression)? & ("view" "=" view=ViewCall |
		//	"handler" "=" handler=STRING) "}";
		public ParserRule getRule() { return rule; }

		//"button" "{" ("title" "=" title=ScalarExpression)? & ("icon" "=" icon=ScalarExpression)? & ("view" "=" view=ViewCall |
		//"handler" "=" handler=STRING) "}"
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }

		//"button" "{" ("title" "=" title=ScalarExpression)?
		public Group getGroup_0() { return cGroup_0; }

		//"button"
		public Keyword getButtonKeyword_0_0() { return cButtonKeyword_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_1() { return cLeftCurlyBracketKeyword_0_1; }

		//("title" "=" title=ScalarExpression)?
		public Group getGroup_0_2() { return cGroup_0_2; }

		//"title"
		public Keyword getTitleKeyword_0_2_0() { return cTitleKeyword_0_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2_1() { return cEqualsSignKeyword_0_2_1; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_0_2_2() { return cTitleAssignment_0_2_2; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_0_2_2_0() { return cTitleScalarExpressionParserRuleCall_0_2_2_0; }

		//("icon" "=" icon=ScalarExpression)?
		public Group getGroup_1() { return cGroup_1; }

		//"icon"
		public Keyword getIconKeyword_1_0() { return cIconKeyword_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_1() { return cEqualsSignKeyword_1_1; }

		//icon=ScalarExpression
		public Assignment getIconAssignment_1_2() { return cIconAssignment_1_2; }

		//ScalarExpression
		public RuleCall getIconScalarExpressionParserRuleCall_1_2_0() { return cIconScalarExpressionParserRuleCall_1_2_0; }

		//("view" "=" view=ViewCall | "handler" "=" handler=STRING) "}"
		public Group getGroup_2() { return cGroup_2; }

		//"view" "=" view=ViewCall | "handler" "=" handler=STRING
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }

		//"view" "=" view=ViewCall
		public Group getGroup_2_0_0() { return cGroup_2_0_0; }

		//"view"
		public Keyword getViewKeyword_2_0_0_0() { return cViewKeyword_2_0_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_0_0_1() { return cEqualsSignKeyword_2_0_0_1; }

		//view=ViewCall
		public Assignment getViewAssignment_2_0_0_2() { return cViewAssignment_2_0_0_2; }

		//ViewCall
		public RuleCall getViewViewCallParserRuleCall_2_0_0_2_0() { return cViewViewCallParserRuleCall_2_0_0_2_0; }

		//"handler" "=" handler=STRING
		public Group getGroup_2_0_1() { return cGroup_2_0_1; }

		//"handler"
		public Keyword getHandlerKeyword_2_0_1_0() { return cHandlerKeyword_2_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_0_1_1() { return cEqualsSignKeyword_2_0_1_1; }

		//handler=STRING
		public Assignment getHandlerAssignment_2_0_1_2() { return cHandlerAssignment_2_0_1_2; }

		//STRING
		public RuleCall getHandlerSTRINGTerminalRuleCall_2_0_1_2_0() { return cHandlerSTRINGTerminalRuleCall_2_0_1_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1() { return cRightCurlyBracketKeyword_2_1; }
	}

	public class ConstantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstantAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cLanguageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cLanguageAlternatives_3_0 = (Alternatives)cLanguageAssignment_3.eContents().get(0);
		private final Keyword cLanguageDeKeyword_3_0_0 = (Keyword)cLanguageAlternatives_3_0.eContents().get(0);
		private final Keyword cLanguageEnKeyword_3_0_1 = (Keyword)cLanguageAlternatives_3_0.eContents().get(1);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueScalarExpressionParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLanguageAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Alternatives cLanguageAlternatives_5_1_0 = (Alternatives)cLanguageAssignment_5_1.eContents().get(0);
		private final Keyword cLanguageDeKeyword_5_1_0_0 = (Keyword)cLanguageAlternatives_5_1_0.eContents().get(0);
		private final Keyword cLanguageEnKeyword_5_1_0_1 = (Keyword)cLanguageAlternatives_5_1_0.eContents().get(1);
		private final Assignment cValueAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cValueScalarExpressionParserRuleCall_5_2_0 = (RuleCall)cValueAssignment_5_2.eContents().get(0);
		
		//Constant returns VariableDeclaration:
		//	{Constant} "const" name=ID language+=("de=" | "en=")? value+=ScalarExpression ("," language+=("de=" | "en=")?
		//	value+=ScalarExpression)*;
		public ParserRule getRule() { return rule; }

		//{Constant} "const" name=ID language+=("de=" | "en=")? value+=ScalarExpression ("," language+=("de=" | "en=")?
		//value+=ScalarExpression)*
		public Group getGroup() { return cGroup; }

		//{Constant}
		public Action getConstantAction_0() { return cConstantAction_0; }

		//"const"
		public Keyword getConstKeyword_1() { return cConstKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//language+=("de=" | "en=")?
		public Assignment getLanguageAssignment_3() { return cLanguageAssignment_3; }

		//"de=" | "en="
		public Alternatives getLanguageAlternatives_3_0() { return cLanguageAlternatives_3_0; }

		//"de="
		public Keyword getLanguageDeKeyword_3_0_0() { return cLanguageDeKeyword_3_0_0; }

		//"en="
		public Keyword getLanguageEnKeyword_3_0_1() { return cLanguageEnKeyword_3_0_1; }

		//value+=ScalarExpression
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//ScalarExpression
		public RuleCall getValueScalarExpressionParserRuleCall_4_0() { return cValueScalarExpressionParserRuleCall_4_0; }

		//("," language+=("de=" | "en=")? value+=ScalarExpression)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//language+=("de=" | "en=")?
		public Assignment getLanguageAssignment_5_1() { return cLanguageAssignment_5_1; }

		//"de=" | "en="
		public Alternatives getLanguageAlternatives_5_1_0() { return cLanguageAlternatives_5_1_0; }

		//"de="
		public Keyword getLanguageDeKeyword_5_1_0_0() { return cLanguageDeKeyword_5_1_0_0; }

		//"en="
		public Keyword getLanguageEnKeyword_5_1_0_1() { return cLanguageEnKeyword_5_1_0_1; }

		//value+=ScalarExpression
		public Assignment getValueAssignment_5_2() { return cValueAssignment_5_2; }

		//ScalarExpression
		public RuleCall getValueScalarExpressionParserRuleCall_5_2_0() { return cValueScalarExpressionParserRuleCall_5_2_0; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// -------------------------------------------
		//// types
		//Type:
		//	SimpleType | Entity;
		public ParserRule getRule() { return rule; }

		//SimpleType | Entity
		public Alternatives getAlternatives() { return cAlternatives; }

		//SimpleType
		public RuleCall getSimpleTypeParserRuleCall_0() { return cSimpleTypeParserRuleCall_0; }

		//Entity
		public RuleCall getEntityParserRuleCall_1() { return cEntityParserRuleCall_1; }
	}

	public class SimpleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cMapsToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPlatformTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPlatformTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cPlatformTypeAssignment_3.eContents().get(0);
		
		//SimpleType:
		//	"type" name=ID "mapsTo" platformType=STRING;
		public ParserRule getRule() { return rule; }

		//"type" name=ID "mapsTo" platformType=STRING
		public Group getGroup() { return cGroup; }

		//"type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"mapsTo"
		public Keyword getMapsToKeyword_2() { return cMapsToKeyword_2; }

		//platformType=STRING
		public Assignment getPlatformTypeAssignment_3() { return cPlatformTypeAssignment_3; }

		//STRING
		public RuleCall getPlatformTypeSTRINGTerminalRuleCall_3_0() { return cPlatformTypeSTRINGTerminalRuleCall_3_0; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExtendsEntityCrossReference_2_1_0 = (CrossReference)cExtendsAssignment_2_1.eContents().get(0);
		private final RuleCall cExtendsEntityIDTerminalRuleCall_2_1_0_1 = (RuleCall)cExtendsEntityCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPropertiesPropertyParserRuleCall_4_0 = (RuleCall)cPropertiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	"entity" name=ID ("extends" extends=[Entity])? "{" properties+=Property* "}";
		public ParserRule getRule() { return rule; }

		//"entity" name=ID ("extends" extends=[Entity])? "{" properties+=Property* "}"
		public Group getGroup() { return cGroup; }

		//"entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" extends=[Entity])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//extends=[Entity]
		public Assignment getExtendsAssignment_2_1() { return cExtendsAssignment_2_1; }

		//[Entity]
		public CrossReference getExtendsEntityCrossReference_2_1_0() { return cExtendsEntityCrossReference_2_1_0; }

		//ID
		public RuleCall getExtendsEntityIDTerminalRuleCall_2_1_0_1() { return cExtendsEntityIDTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_4_0() { return cPropertiesPropertyParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDerivedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cDerivedDerivedKeyword_0_0 = (Keyword)cDerivedAssignment_0.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionTypeDescriptionParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Property:
		//	derived?="derived"? description=TypeDescription name=ID;
		public ParserRule getRule() { return rule; }

		//derived?="derived"? description=TypeDescription name=ID
		public Group getGroup() { return cGroup; }

		//derived?="derived"?
		public Assignment getDerivedAssignment_0() { return cDerivedAssignment_0; }

		//"derived"
		public Keyword getDerivedDerivedKeyword_0_0() { return cDerivedDerivedKeyword_0_0; }

		//description=TypeDescription
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//TypeDescription
		public RuleCall getDescriptionTypeDescriptionParserRuleCall_1_0() { return cDescriptionTypeDescriptionParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class ContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContentProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContentproviderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParameterAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_2_1_0 = (RuleCall)cParameterAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cReturnsKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Assignment cResolverAssignment_3_0_1 = (Assignment)cAlternatives_3_0.eContents().get(1);
		private final Keyword cResolverResolvesKeyword_3_0_1_0 = (Keyword)cResolverAssignment_3_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_3_1_0 = (CrossReference)cTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_3_1_0_1 = (RuleCall)cTypeTypeCrossReference_3_1_0.eContents().get(1);
		private final Assignment cManyAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Keyword cManyLeftSquareBracketRightSquareBracketKeyword_3_2_0 = (Keyword)cManyAssignment_3_2.eContents().get(0);
		private final Keyword cFetchesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cXmlAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final Keyword cXmlXMLKeyword_5_0_0 = (Keyword)cXmlAssignment_5_0.eContents().get(0);
		private final Assignment cHtmlAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final Keyword cHtmlHTMLKeyword_5_1_0 = (Keyword)cHtmlAssignment_5_1.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cUrlAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cUrlScalarExpressionParserRuleCall_7_0 = (RuleCall)cUrlAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSelectsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cSelectionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cSelectionScalarExpressionParserRuleCall_8_1_0 = (RuleCall)cSelectionAssignment_8_1.eContents().get(0);
		
		//// -------------------------------------------
		//// content provider
		//ContentProvider:
		//	"contentprovider" name=ID ("(" parameter=Parameter ")")? (("returns" | resolver?="resolves") type=[Type] many?="[]"?)?
		//	"fetches" (xml?="XML" | html?="HTML") "from" url=ScalarExpression ("selects" selection=ScalarExpression)?;
		public ParserRule getRule() { return rule; }

		//"contentprovider" name=ID ("(" parameter=Parameter ")")? (("returns" | resolver?="resolves") type=[Type] many?="[]"?)?
		//"fetches" (xml?="XML" | html?="HTML") "from" url=ScalarExpression ("selects" selection=ScalarExpression)?
		public Group getGroup() { return cGroup; }

		//"contentprovider"
		public Keyword getContentproviderKeyword_0() { return cContentproviderKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" parameter=Parameter ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//parameter=Parameter
		public Assignment getParameterAssignment_2_1() { return cParameterAssignment_2_1; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_2_1_0() { return cParameterParameterParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//(("returns" | resolver?="resolves") type=[Type] many?="[]"?)?
		public Group getGroup_3() { return cGroup_3; }

		//"returns" | resolver?="resolves"
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }

		//"returns"
		public Keyword getReturnsKeyword_3_0_0() { return cReturnsKeyword_3_0_0; }

		//resolver?="resolves"
		public Assignment getResolverAssignment_3_0_1() { return cResolverAssignment_3_0_1; }

		//"resolves"
		public Keyword getResolverResolvesKeyword_3_0_1_0() { return cResolverResolvesKeyword_3_0_1_0; }

		//type=[Type]
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_3_1_0() { return cTypeTypeCrossReference_3_1_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_3_1_0_1() { return cTypeTypeIDTerminalRuleCall_3_1_0_1; }

		//many?="[]"?
		public Assignment getManyAssignment_3_2() { return cManyAssignment_3_2; }

		//"[]"
		public Keyword getManyLeftSquareBracketRightSquareBracketKeyword_3_2_0() { return cManyLeftSquareBracketRightSquareBracketKeyword_3_2_0; }

		//"fetches"
		public Keyword getFetchesKeyword_4() { return cFetchesKeyword_4; }

		//xml?="XML" | html?="HTML"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//xml?="XML"
		public Assignment getXmlAssignment_5_0() { return cXmlAssignment_5_0; }

		//"XML"
		public Keyword getXmlXMLKeyword_5_0_0() { return cXmlXMLKeyword_5_0_0; }

		//html?="HTML"
		public Assignment getHtmlAssignment_5_1() { return cHtmlAssignment_5_1; }

		//"HTML"
		public Keyword getHtmlHTMLKeyword_5_1_0() { return cHtmlHTMLKeyword_5_1_0; }

		//"from"
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }

		//url=ScalarExpression
		public Assignment getUrlAssignment_7() { return cUrlAssignment_7; }

		//ScalarExpression
		public RuleCall getUrlScalarExpressionParserRuleCall_7_0() { return cUrlScalarExpressionParserRuleCall_7_0; }

		//("selects" selection=ScalarExpression)?
		public Group getGroup_8() { return cGroup_8; }

		//"selects"
		public Keyword getSelectsKeyword_8_0() { return cSelectsKeyword_8_0; }

		//selection=ScalarExpression
		public Assignment getSelectionAssignment_8_1() { return cSelectionAssignment_8_1; }

		//ScalarExpression
		public RuleCall getSelectionScalarExpressionParserRuleCall_8_1_0() { return cSelectionScalarExpressionParserRuleCall_8_1_0; }
	}

	public class ProviderConstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProviderConstruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProviderAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cProviderContentProviderCrossReference_0_0 = (CrossReference)cProviderAssignment_0.eContents().get(0);
		private final RuleCall cProviderContentProviderIDTerminalRuleCall_0_0_1 = (RuleCall)cProviderContentProviderCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cArgumentAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cArgumentExpressionParserRuleCall_2_0_0 = (RuleCall)cArgumentAssignment_2_0.eContents().get(0);
		private final Assignment cPredefinedParameterAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cPredefinedParameterPredefinedParameterParserRuleCall_2_1_0 = (RuleCall)cPredefinedParameterAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ProviderConstruction:
		//	provider=[ContentProvider] "(" (argument=Expression | predefinedParameter=PredefinedParameter)? ")";
		public ParserRule getRule() { return rule; }

		//provider=[ContentProvider] "(" (argument=Expression | predefinedParameter=PredefinedParameter)? ")"
		public Group getGroup() { return cGroup; }

		//provider=[ContentProvider]
		public Assignment getProviderAssignment_0() { return cProviderAssignment_0; }

		//[ContentProvider]
		public CrossReference getProviderContentProviderCrossReference_0_0() { return cProviderContentProviderCrossReference_0_0; }

		//ID
		public RuleCall getProviderContentProviderIDTerminalRuleCall_0_0_1() { return cProviderContentProviderIDTerminalRuleCall_0_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//(argument=Expression | predefinedParameter=PredefinedParameter)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//argument=Expression
		public Assignment getArgumentAssignment_2_0() { return cArgumentAssignment_2_0; }

		//Expression
		public RuleCall getArgumentExpressionParserRuleCall_2_0_0() { return cArgumentExpressionParserRuleCall_2_0_0; }

		//predefinedParameter=PredefinedParameter
		public Assignment getPredefinedParameterAssignment_2_1() { return cPredefinedParameterAssignment_2_1; }

		//PredefinedParameter
		public RuleCall getPredefinedParameterPredefinedParameterParserRuleCall_2_1_0() { return cPredefinedParameterPredefinedParameterParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class ViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "View");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSectionedViewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCustomViewParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWebViewParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// -------------------------------------------
		//// views
		//View:
		//	SectionedView | CustomView | WebView;
		public ParserRule getRule() { return rule; }

		//SectionedView | CustomView | WebView
		public Alternatives getAlternatives() { return cAlternatives; }

		//SectionedView
		public RuleCall getSectionedViewParserRuleCall_0() { return cSectionedViewParserRuleCall_0; }

		//CustomView
		public RuleCall getCustomViewParserRuleCall_1() { return cCustomViewParserRuleCall_1; }

		//WebView
		public RuleCall getWebViewParserRuleCall_2() { return cWebViewParserRuleCall_2; }
	}

	public class SectionedViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionedView");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTableViewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDetailsViewParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SectionedView:
		//	TableView | DetailsView;
		public ParserRule getRule() { return rule; }

		//TableView | DetailsView
		public Alternatives getAlternatives() { return cAlternatives; }

		//TableView
		public RuleCall getTableViewParserRuleCall_0() { return cTableViewParserRuleCall_0; }

		//DetailsView
		public RuleCall getDetailsViewParserRuleCall_1() { return cDetailsViewParserRuleCall_1; }
	}

	public class TableViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTableviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cContentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContentParameterParserRuleCall_2_1_0 = (RuleCall)cContentAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperViewAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperViewSectionedViewCrossReference_3_1_0 = (CrossReference)cSuperViewAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperViewSectionedViewIDTerminalRuleCall_3_1_0_1 = (RuleCall)cSuperViewSectionedViewCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTitleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTitleAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTitleScalarExpressionParserRuleCall_5_2_0 = (RuleCall)cTitleAssignment_5_2.eContents().get(0);
		private final Assignment cButtonsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cButtonsButtonParserRuleCall_6_0 = (RuleCall)cButtonsAssignment_6.eContents().get(0);
		private final Assignment cForAllSectionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cForAllSectionsViewForAllSectionsParserRuleCall_7_0 = (RuleCall)cForAllSectionsAssignment_7.eContents().get(0);
		private final Assignment cSectionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSectionsViewSectionParserRuleCall_8_0 = (RuleCall)cSectionsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cActionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cActionsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_9_2_0 = (RuleCall)cActionsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cActionsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_9_3_1_0 = (RuleCall)cActionsAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//TableView:
		//	"tableview" name=ID ("(" content=Parameter ")")? (":" superView=[SectionedView])? "{" ("title" "="
		//	title=ScalarExpression)? buttons+=Button* forAllSections=ViewForAllSections? sections+=ViewSection* ("action" "="
		//	actions+=Action ("," actions+=Action)*)? "}";
		public ParserRule getRule() { return rule; }

		//"tableview" name=ID ("(" content=Parameter ")")? (":" superView=[SectionedView])? "{" ("title" "="
		//title=ScalarExpression)? buttons+=Button* forAllSections=ViewForAllSections? sections+=ViewSection* ("action" "="
		//actions+=Action ("," actions+=Action)*)? "}"
		public Group getGroup() { return cGroup; }

		//"tableview"
		public Keyword getTableviewKeyword_0() { return cTableviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" content=Parameter ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//content=Parameter
		public Assignment getContentAssignment_2_1() { return cContentAssignment_2_1; }

		//Parameter
		public RuleCall getContentParameterParserRuleCall_2_1_0() { return cContentParameterParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//(":" superView=[SectionedView])?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//superView=[SectionedView]
		public Assignment getSuperViewAssignment_3_1() { return cSuperViewAssignment_3_1; }

		//[SectionedView]
		public CrossReference getSuperViewSectionedViewCrossReference_3_1_0() { return cSuperViewSectionedViewCrossReference_3_1_0; }

		//ID
		public RuleCall getSuperViewSectionedViewIDTerminalRuleCall_3_1_0_1() { return cSuperViewSectionedViewIDTerminalRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("title" "=" title=ScalarExpression)?
		public Group getGroup_5() { return cGroup_5; }

		//"title"
		public Keyword getTitleKeyword_5_0() { return cTitleKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_5_2() { return cTitleAssignment_5_2; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_5_2_0() { return cTitleScalarExpressionParserRuleCall_5_2_0; }

		//buttons+=Button*
		public Assignment getButtonsAssignment_6() { return cButtonsAssignment_6; }

		//Button
		public RuleCall getButtonsButtonParserRuleCall_6_0() { return cButtonsButtonParserRuleCall_6_0; }

		//forAllSections=ViewForAllSections?
		public Assignment getForAllSectionsAssignment_7() { return cForAllSectionsAssignment_7; }

		//ViewForAllSections
		public RuleCall getForAllSectionsViewForAllSectionsParserRuleCall_7_0() { return cForAllSectionsViewForAllSectionsParserRuleCall_7_0; }

		//sections+=ViewSection*
		public Assignment getSectionsAssignment_8() { return cSectionsAssignment_8; }

		//ViewSection
		public RuleCall getSectionsViewSectionParserRuleCall_8_0() { return cSectionsViewSectionParserRuleCall_8_0; }

		//("action" "=" actions+=Action ("," actions+=Action)*)?
		public Group getGroup_9() { return cGroup_9; }

		//"action"
		public Keyword getActionKeyword_9_0() { return cActionKeyword_9_0; }

		//"="
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }

		//actions+=Action
		public Assignment getActionsAssignment_9_2() { return cActionsAssignment_9_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_9_2_0() { return cActionsActionParserRuleCall_9_2_0; }

		//("," actions+=Action)*
		public Group getGroup_9_3() { return cGroup_9_3; }

		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }

		//actions+=Action
		public Assignment getActionsAssignment_9_3_1() { return cActionsAssignment_9_3_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_9_3_1_0() { return cActionsActionParserRuleCall_9_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class DetailsViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DetailsView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDetailsviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cContentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContentParameterParserRuleCall_2_1_0 = (RuleCall)cContentAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperViewAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperViewSectionedViewCrossReference_3_1_0 = (CrossReference)cSuperViewAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperViewSectionedViewIDTerminalRuleCall_3_1_0_1 = (RuleCall)cSuperViewSectionedViewCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cTitleKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTitleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTitleScalarExpressionParserRuleCall_7_0 = (RuleCall)cTitleAssignment_7.eContents().get(0);
		private final Assignment cButtonsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cButtonsButtonParserRuleCall_8_0 = (RuleCall)cButtonsAssignment_8.eContents().get(0);
		private final Assignment cHeaderAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cHeaderViewHeaderParserRuleCall_9_0 = (RuleCall)cHeaderAssignment_9.eContents().get(0);
		private final Assignment cForAllSectionsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cForAllSectionsViewForAllSectionsParserRuleCall_10_0 = (RuleCall)cForAllSectionsAssignment_10.eContents().get(0);
		private final Assignment cSectionsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSectionsViewSectionParserRuleCall_11_0 = (RuleCall)cSectionsAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cActionKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cActionsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_12_2_0 = (RuleCall)cActionsAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cActionsAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_12_3_1_0 = (RuleCall)cActionsAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//DetailsView:
		//	"detailsview" name=ID ("(" content=Parameter ")")? (":" superView=[SectionedView])? "{" "title" "="
		//	title=ScalarExpression buttons+=Button* header=ViewHeader? forAllSections=ViewForAllSections? sections+=ViewSection*
		//	("action" "=" actions+=Action ("," actions+=Action)*)? "}";
		public ParserRule getRule() { return rule; }

		//"detailsview" name=ID ("(" content=Parameter ")")? (":" superView=[SectionedView])? "{" "title" "="
		//title=ScalarExpression buttons+=Button* header=ViewHeader? forAllSections=ViewForAllSections? sections+=ViewSection*
		//("action" "=" actions+=Action ("," actions+=Action)*)? "}"
		public Group getGroup() { return cGroup; }

		//"detailsview"
		public Keyword getDetailsviewKeyword_0() { return cDetailsviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" content=Parameter ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//content=Parameter
		public Assignment getContentAssignment_2_1() { return cContentAssignment_2_1; }

		//Parameter
		public RuleCall getContentParameterParserRuleCall_2_1_0() { return cContentParameterParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//(":" superView=[SectionedView])?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//superView=[SectionedView]
		public Assignment getSuperViewAssignment_3_1() { return cSuperViewAssignment_3_1; }

		//[SectionedView]
		public CrossReference getSuperViewSectionedViewCrossReference_3_1_0() { return cSuperViewSectionedViewCrossReference_3_1_0; }

		//ID
		public RuleCall getSuperViewSectionedViewIDTerminalRuleCall_3_1_0_1() { return cSuperViewSectionedViewIDTerminalRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"title"
		public Keyword getTitleKeyword_5() { return cTitleKeyword_5; }

		//"="
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_7() { return cTitleAssignment_7; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_7_0() { return cTitleScalarExpressionParserRuleCall_7_0; }

		//buttons+=Button*
		public Assignment getButtonsAssignment_8() { return cButtonsAssignment_8; }

		//Button
		public RuleCall getButtonsButtonParserRuleCall_8_0() { return cButtonsButtonParserRuleCall_8_0; }

		//header=ViewHeader?
		public Assignment getHeaderAssignment_9() { return cHeaderAssignment_9; }

		//ViewHeader
		public RuleCall getHeaderViewHeaderParserRuleCall_9_0() { return cHeaderViewHeaderParserRuleCall_9_0; }

		//forAllSections=ViewForAllSections?
		public Assignment getForAllSectionsAssignment_10() { return cForAllSectionsAssignment_10; }

		//ViewForAllSections
		public RuleCall getForAllSectionsViewForAllSectionsParserRuleCall_10_0() { return cForAllSectionsViewForAllSectionsParserRuleCall_10_0; }

		//sections+=ViewSection*
		public Assignment getSectionsAssignment_11() { return cSectionsAssignment_11; }

		//ViewSection
		public RuleCall getSectionsViewSectionParserRuleCall_11_0() { return cSectionsViewSectionParserRuleCall_11_0; }

		//("action" "=" actions+=Action ("," actions+=Action)*)?
		public Group getGroup_12() { return cGroup_12; }

		//"action"
		public Keyword getActionKeyword_12_0() { return cActionKeyword_12_0; }

		//"="
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }

		//actions+=Action
		public Assignment getActionsAssignment_12_2() { return cActionsAssignment_12_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_12_2_0() { return cActionsActionParserRuleCall_12_2_0; }

		//("," actions+=Action)*
		public Group getGroup_12_3() { return cGroup_12_3; }

		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }

		//actions+=Action
		public Assignment getActionsAssignment_12_3_1() { return cActionsAssignment_12_3_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_12_3_1_0() { return cActionsActionParserRuleCall_12_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class WebViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WebView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWebviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTitleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTitleScalarExpressionParserRuleCall_5_0 = (RuleCall)cTitleAssignment_5.eContents().get(0);
		private final Assignment cButtonsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cButtonsButtonParserRuleCall_6_0 = (RuleCall)cButtonsAssignment_6.eContents().get(0);
		private final Assignment cHeaderAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cHeaderViewHeaderParserRuleCall_7_0 = (RuleCall)cHeaderAssignment_7.eContents().get(0);
		private final Assignment cForAllSectionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cForAllSectionsViewForAllSectionsParserRuleCall_8_0 = (RuleCall)cForAllSectionsAssignment_8.eContents().get(0);
		private final Assignment cSectionsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSectionsViewSectionParserRuleCall_9_0 = (RuleCall)cSectionsAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cActionKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cActionsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_10_2_0 = (RuleCall)cActionsAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cActionsAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_10_3_1_0 = (RuleCall)cActionsAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//WebView:
		//	"webview" name=ID "{" "title" "=" title=ScalarExpression buttons+=Button* header=ViewHeader?
		//	forAllSections=ViewForAllSections? sections+=ViewSection* ("action" "=" actions+=Action ("," actions+=Action)*)? "}";
		public ParserRule getRule() { return rule; }

		//"webview" name=ID "{" "title" "=" title=ScalarExpression buttons+=Button* header=ViewHeader?
		//forAllSections=ViewForAllSections? sections+=ViewSection* ("action" "=" actions+=Action ("," actions+=Action)*)? "}"
		public Group getGroup() { return cGroup; }

		//"webview"
		public Keyword getWebviewKeyword_0() { return cWebviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"title"
		public Keyword getTitleKeyword_3() { return cTitleKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_5() { return cTitleAssignment_5; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_5_0() { return cTitleScalarExpressionParserRuleCall_5_0; }

		//buttons+=Button*
		public Assignment getButtonsAssignment_6() { return cButtonsAssignment_6; }

		//Button
		public RuleCall getButtonsButtonParserRuleCall_6_0() { return cButtonsButtonParserRuleCall_6_0; }

		//header=ViewHeader?
		public Assignment getHeaderAssignment_7() { return cHeaderAssignment_7; }

		//ViewHeader
		public RuleCall getHeaderViewHeaderParserRuleCall_7_0() { return cHeaderViewHeaderParserRuleCall_7_0; }

		//forAllSections=ViewForAllSections?
		public Assignment getForAllSectionsAssignment_8() { return cForAllSectionsAssignment_8; }

		//ViewForAllSections
		public RuleCall getForAllSectionsViewForAllSectionsParserRuleCall_8_0() { return cForAllSectionsViewForAllSectionsParserRuleCall_8_0; }

		//sections+=ViewSection*
		public Assignment getSectionsAssignment_9() { return cSectionsAssignment_9; }

		//ViewSection
		public RuleCall getSectionsViewSectionParserRuleCall_9_0() { return cSectionsViewSectionParserRuleCall_9_0; }

		//("action" "=" actions+=Action ("," actions+=Action)*)?
		public Group getGroup_10() { return cGroup_10; }

		//"action"
		public Keyword getActionKeyword_10_0() { return cActionKeyword_10_0; }

		//"="
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }

		//actions+=Action
		public Assignment getActionsAssignment_10_2() { return cActionsAssignment_10_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_2_0() { return cActionsActionParserRuleCall_10_2_0; }

		//("," actions+=Action)*
		public Group getGroup_10_3() { return cGroup_10_3; }

		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }

		//actions+=Action
		public Assignment getActionsAssignment_10_3_1() { return cActionsAssignment_10_3_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_3_1_0() { return cActionsActionParserRuleCall_10_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class CustomViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cContentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContentParameterParserRuleCall_2_1_0 = (RuleCall)cContentAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cImplementedByKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cObjclassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cObjclassSTRINGTerminalRuleCall_4_0 = (RuleCall)cObjclassAssignment_4.eContents().get(0);
		private final Keyword cTitleKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTitleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTitleScalarExpressionParserRuleCall_7_0 = (RuleCall)cTitleAssignment_7.eContents().get(0);
		private final Assignment cButtonsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cButtonsButtonParserRuleCall_8_0 = (RuleCall)cButtonsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cActionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cActionsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_9_2_0 = (RuleCall)cActionsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cActionsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_9_3_1_0 = (RuleCall)cActionsAssignment_9_3_1.eContents().get(0);
		
		//CustomView:
		//	"customview" name=ID ("(" content=Parameter ")")? "implementedBy" objclass=STRING "title" "=" title=ScalarExpression
		//	buttons+=Button* ("action" "=" actions+=Action ("," actions+=Action)*)?;
		public ParserRule getRule() { return rule; }

		//"customview" name=ID ("(" content=Parameter ")")? "implementedBy" objclass=STRING "title" "=" title=ScalarExpression
		//buttons+=Button* ("action" "=" actions+=Action ("," actions+=Action)*)?
		public Group getGroup() { return cGroup; }

		//"customview"
		public Keyword getCustomviewKeyword_0() { return cCustomviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" content=Parameter ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//content=Parameter
		public Assignment getContentAssignment_2_1() { return cContentAssignment_2_1; }

		//Parameter
		public RuleCall getContentParameterParserRuleCall_2_1_0() { return cContentParameterParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//"implementedBy"
		public Keyword getImplementedByKeyword_3() { return cImplementedByKeyword_3; }

		//objclass=STRING
		public Assignment getObjclassAssignment_4() { return cObjclassAssignment_4; }

		//STRING
		public RuleCall getObjclassSTRINGTerminalRuleCall_4_0() { return cObjclassSTRINGTerminalRuleCall_4_0; }

		//"title"
		public Keyword getTitleKeyword_5() { return cTitleKeyword_5; }

		//"="
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_7() { return cTitleAssignment_7; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_7_0() { return cTitleScalarExpressionParserRuleCall_7_0; }

		//buttons+=Button*
		public Assignment getButtonsAssignment_8() { return cButtonsAssignment_8; }

		//Button
		public RuleCall getButtonsButtonParserRuleCall_8_0() { return cButtonsButtonParserRuleCall_8_0; }

		//("action" "=" actions+=Action ("," actions+=Action)*)?
		public Group getGroup_9() { return cGroup_9; }

		//"action"
		public Keyword getActionKeyword_9_0() { return cActionKeyword_9_0; }

		//"="
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }

		//actions+=Action
		public Assignment getActionsAssignment_9_2() { return cActionsAssignment_9_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_9_2_0() { return cActionsActionParserRuleCall_9_2_0; }

		//("," actions+=Action)*
		public Group getGroup_9_3() { return cGroup_9_3; }

		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }

		//actions+=Action
		public Assignment getActionsAssignment_9_3_1() { return cActionsAssignment_9_3_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_9_3_1_0() { return cActionsActionParserRuleCall_9_3_1_0; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Action returns VariableDeclaration:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class ViewHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cViewHeaderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHeaderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTitleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTitleScalarExpressionParserRuleCall_3_2_0 = (RuleCall)cTitleAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSubtitleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSubtitleAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSubtitleScalarExpressionParserRuleCall_4_2_0 = (RuleCall)cSubtitleAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDetailsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDetailsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDetailsScalarExpressionParserRuleCall_5_2_0 = (RuleCall)cDetailsAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cImageKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cImageAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cImageScalarExpressionParserRuleCall_6_2_0 = (RuleCall)cImageAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ViewHeader:
		//	{ViewHeader} "header" "{" ("title" "=" title=ScalarExpression)? ("subtitle" "=" subtitle=ScalarExpression)? ("details"
		//	"=" details=ScalarExpression)? ("image" "=" image=ScalarExpression)? "}";
		public ParserRule getRule() { return rule; }

		//{ViewHeader} "header" "{" ("title" "=" title=ScalarExpression)? ("subtitle" "=" subtitle=ScalarExpression)? ("details"
		//"=" details=ScalarExpression)? ("image" "=" image=ScalarExpression)? "}"
		public Group getGroup() { return cGroup; }

		//{ViewHeader}
		public Action getViewHeaderAction_0() { return cViewHeaderAction_0; }

		//"header"
		public Keyword getHeaderKeyword_1() { return cHeaderKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("title" "=" title=ScalarExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//"title"
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_3_2() { return cTitleAssignment_3_2; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_3_2_0() { return cTitleScalarExpressionParserRuleCall_3_2_0; }

		//("subtitle" "=" subtitle=ScalarExpression)?
		public Group getGroup_4() { return cGroup_4; }

		//"subtitle"
		public Keyword getSubtitleKeyword_4_0() { return cSubtitleKeyword_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }

		//subtitle=ScalarExpression
		public Assignment getSubtitleAssignment_4_2() { return cSubtitleAssignment_4_2; }

		//ScalarExpression
		public RuleCall getSubtitleScalarExpressionParserRuleCall_4_2_0() { return cSubtitleScalarExpressionParserRuleCall_4_2_0; }

		//("details" "=" details=ScalarExpression)?
		public Group getGroup_5() { return cGroup_5; }

		//"details"
		public Keyword getDetailsKeyword_5_0() { return cDetailsKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//details=ScalarExpression
		public Assignment getDetailsAssignment_5_2() { return cDetailsAssignment_5_2; }

		//ScalarExpression
		public RuleCall getDetailsScalarExpressionParserRuleCall_5_2_0() { return cDetailsScalarExpressionParserRuleCall_5_2_0; }

		//("image" "=" image=ScalarExpression)?
		public Group getGroup_6() { return cGroup_6; }

		//"image"
		public Keyword getImageKeyword_6_0() { return cImageKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//image=ScalarExpression
		public Assignment getImageAssignment_6_2() { return cImageAssignment_6_2; }

		//ScalarExpression
		public RuleCall getImageScalarExpressionParserRuleCall_6_2_0() { return cImageScalarExpressionParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ViewSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cViewSectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSectionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTitleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTitleScalarExpressionParserRuleCall_3_2_0 = (RuleCall)cTitleAssignment_3_2.eContents().get(0);
		private final Assignment cCellsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCellsSectionCellParserRuleCall_4_0 = (RuleCall)cCellsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ViewSection:
		//	{ViewSection} "section" "{" ("title" "=" title=ScalarExpression)? cells+=SectionCell* "}";
		public ParserRule getRule() { return rule; }

		//{ViewSection} "section" "{" ("title" "=" title=ScalarExpression)? cells+=SectionCell* "}"
		public Group getGroup() { return cGroup; }

		//{ViewSection}
		public Action getViewSectionAction_0() { return cViewSectionAction_0; }

		//"section"
		public Keyword getSectionKeyword_1() { return cSectionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("title" "=" title=ScalarExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//"title"
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_3_2() { return cTitleAssignment_3_2; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_3_2_0() { return cTitleScalarExpressionParserRuleCall_3_2_0; }

		//cells+=SectionCell*
		public Assignment getCellsAssignment_4() { return cCellsAssignment_4; }

		//SectionCell
		public RuleCall getCellsSectionCellParserRuleCall_4_0() { return cCellsSectionCellParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ViewForAllSectionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewForAllSections");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cViewForAllSectionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cForAllSectionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTitleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTitleScalarExpressionParserRuleCall_3_2_0 = (RuleCall)cTitleAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cContentKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cProviderAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cProviderProviderConstructionParserRuleCall_4_2_0 = (RuleCall)cProviderAssignment_4_2.eContents().get(0);
		private final Assignment cCellsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCellsSectionCellParserRuleCall_5_0 = (RuleCall)cCellsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ViewForAllSections:
		//	{ViewForAllSections} "forAllSections" "{" ("title" "=" title=ScalarExpression)? ("content" "="
		//	provider=ProviderConstruction)? cells+=SectionCell* "}";
		public ParserRule getRule() { return rule; }

		//{ViewForAllSections} "forAllSections" "{" ("title" "=" title=ScalarExpression)? ("content" "="
		//provider=ProviderConstruction)? cells+=SectionCell* "}"
		public Group getGroup() { return cGroup; }

		//{ViewForAllSections}
		public Action getViewForAllSectionsAction_0() { return cViewForAllSectionsAction_0; }

		//"forAllSections"
		public Keyword getForAllSectionsKeyword_1() { return cForAllSectionsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("title" "=" title=ScalarExpression)?
		public Group getGroup_3() { return cGroup_3; }

		//"title"
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//title=ScalarExpression
		public Assignment getTitleAssignment_3_2() { return cTitleAssignment_3_2; }

		//ScalarExpression
		public RuleCall getTitleScalarExpressionParserRuleCall_3_2_0() { return cTitleScalarExpressionParserRuleCall_3_2_0; }

		//("content" "=" provider=ProviderConstruction)?
		public Group getGroup_4() { return cGroup_4; }

		//"content"
		public Keyword getContentKeyword_4_0() { return cContentKeyword_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }

		//provider=ProviderConstruction
		public Assignment getProviderAssignment_4_2() { return cProviderAssignment_4_2; }

		//ProviderConstruction
		public RuleCall getProviderProviderConstructionParserRuleCall_4_2_0() { return cProviderProviderConstructionParserRuleCall_4_2_0; }

		//cells+=SectionCell*
		public Assignment getCellsAssignment_5() { return cCellsAssignment_5; }

		//SectionCell
		public RuleCall getCellsSectionCellParserRuleCall_5_0() { return cCellsSectionCellParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SectionCellElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionCell");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCellKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeCellTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cForeachKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIteratorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIteratorCollectionIteratorParserRuleCall_2_1_0 = (RuleCall)cIteratorAssignment_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTextAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTextScalarExpressionParserRuleCall_4_2_0 = (RuleCall)cTextAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDetailsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDetailsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDetailsScalarExpressionParserRuleCall_5_2_0 = (RuleCall)cDetailsAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cImageKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cImageAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cImageScalarExpressionParserRuleCall_6_2_0 = (RuleCall)cImageAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cQueryKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cQueryAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cQueryScalarExpressionParserRuleCall_7_2_0 = (RuleCall)cQueryAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cActionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cActionAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cActionViewActionParserRuleCall_8_2_0 = (RuleCall)cActionAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cButtonKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cButtonActionAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cButtonActionViewActionParserRuleCall_9_2_0 = (RuleCall)cButtonActionAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//SectionCell:
		//	"cell" type=CellType ("foreach" iterator=CollectionIterator)? "{" ("text" "=" text=ScalarExpression)? ("details" "="
		//	details=ScalarExpression)? ("image" "=" image=ScalarExpression)? ("query" "=" query=ScalarExpression)? ("action" "="
		//	action=ViewAction)? ("button" "=" buttonAction=ViewAction)? "}";
		public ParserRule getRule() { return rule; }

		//"cell" type=CellType ("foreach" iterator=CollectionIterator)? "{" ("text" "=" text=ScalarExpression)? ("details" "="
		//details=ScalarExpression)? ("image" "=" image=ScalarExpression)? ("query" "=" query=ScalarExpression)? ("action" "="
		//action=ViewAction)? ("button" "=" buttonAction=ViewAction)? "}"
		public Group getGroup() { return cGroup; }

		//"cell"
		public Keyword getCellKeyword_0() { return cCellKeyword_0; }

		//type=CellType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//CellType
		public RuleCall getTypeCellTypeEnumRuleCall_1_0() { return cTypeCellTypeEnumRuleCall_1_0; }

		//("foreach" iterator=CollectionIterator)?
		public Group getGroup_2() { return cGroup_2; }

		//"foreach"
		public Keyword getForeachKeyword_2_0() { return cForeachKeyword_2_0; }

		//iterator=CollectionIterator
		public Assignment getIteratorAssignment_2_1() { return cIteratorAssignment_2_1; }

		//CollectionIterator
		public RuleCall getIteratorCollectionIteratorParserRuleCall_2_1_0() { return cIteratorCollectionIteratorParserRuleCall_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("text" "=" text=ScalarExpression)?
		public Group getGroup_4() { return cGroup_4; }

		//"text"
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }

		//text=ScalarExpression
		public Assignment getTextAssignment_4_2() { return cTextAssignment_4_2; }

		//ScalarExpression
		public RuleCall getTextScalarExpressionParserRuleCall_4_2_0() { return cTextScalarExpressionParserRuleCall_4_2_0; }

		//("details" "=" details=ScalarExpression)?
		public Group getGroup_5() { return cGroup_5; }

		//"details"
		public Keyword getDetailsKeyword_5_0() { return cDetailsKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//details=ScalarExpression
		public Assignment getDetailsAssignment_5_2() { return cDetailsAssignment_5_2; }

		//ScalarExpression
		public RuleCall getDetailsScalarExpressionParserRuleCall_5_2_0() { return cDetailsScalarExpressionParserRuleCall_5_2_0; }

		//("image" "=" image=ScalarExpression)?
		public Group getGroup_6() { return cGroup_6; }

		//"image"
		public Keyword getImageKeyword_6_0() { return cImageKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//image=ScalarExpression
		public Assignment getImageAssignment_6_2() { return cImageAssignment_6_2; }

		//ScalarExpression
		public RuleCall getImageScalarExpressionParserRuleCall_6_2_0() { return cImageScalarExpressionParserRuleCall_6_2_0; }

		//("query" "=" query=ScalarExpression)?
		public Group getGroup_7() { return cGroup_7; }

		//"query"
		public Keyword getQueryKeyword_7_0() { return cQueryKeyword_7_0; }

		//"="
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }

		//query=ScalarExpression
		public Assignment getQueryAssignment_7_2() { return cQueryAssignment_7_2; }

		//ScalarExpression
		public RuleCall getQueryScalarExpressionParserRuleCall_7_2_0() { return cQueryScalarExpressionParserRuleCall_7_2_0; }

		//("action" "=" action=ViewAction)?
		public Group getGroup_8() { return cGroup_8; }

		//"action"
		public Keyword getActionKeyword_8_0() { return cActionKeyword_8_0; }

		//"="
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }

		//action=ViewAction
		public Assignment getActionAssignment_8_2() { return cActionAssignment_8_2; }

		//ViewAction
		public RuleCall getActionViewActionParserRuleCall_8_2_0() { return cActionViewActionParserRuleCall_8_2_0; }

		//("button" "=" buttonAction=ViewAction)?
		public Group getGroup_9() { return cGroup_9; }

		//"button"
		public Keyword getButtonKeyword_9_0() { return cButtonKeyword_9_0; }

		//"="
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }

		//buttonAction=ViewAction
		public Assignment getButtonActionAssignment_9_2() { return cButtonActionAssignment_9_2; }

		//ViewAction
		public RuleCall getButtonActionViewActionParserRuleCall_9_2_0() { return cButtonActionViewActionParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class CollectionIteratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectionIterator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCollectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCollectionCollectionExpressionParserRuleCall_0_0 = (RuleCall)cCollectionAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//CollectionIterator:
		//	collection=CollectionExpression "as" name=ID;
		public ParserRule getRule() { return rule; }

		//collection=CollectionExpression "as" name=ID
		public Group getGroup() { return cGroup; }

		//collection=CollectionExpression
		public Assignment getCollectionAssignment_0() { return cCollectionAssignment_0; }

		//CollectionExpression
		public RuleCall getCollectionCollectionExpressionParserRuleCall_0_0() { return cCollectionCollectionExpressionParserRuleCall_0_0; }

		//"as"
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class ViewActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cViewCallParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternalOpenParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActionDelegateParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ViewAction:
		//	ViewCall | ExternalOpen | ActionDelegate;
		public ParserRule getRule() { return rule; }

		//ViewCall | ExternalOpen | ActionDelegate
		public Alternatives getAlternatives() { return cAlternatives; }

		//ViewCall
		public RuleCall getViewCallParserRuleCall_0() { return cViewCallParserRuleCall_0; }

		//ExternalOpen
		public RuleCall getExternalOpenParserRuleCall_1() { return cExternalOpenParserRuleCall_1; }

		//ActionDelegate
		public RuleCall getActionDelegateParserRuleCall_2() { return cActionDelegateParserRuleCall_2; }
	}

	public class ActionDelegateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionDelegate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionDelegateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDelegateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ActionDelegate:
		//	{ActionDelegate} "delegate";
		public ParserRule getRule() { return rule; }

		//{ActionDelegate} "delegate"
		public Group getGroup() { return cGroup; }

		//{ActionDelegate}
		public Action getActionDelegateAction_0() { return cActionDelegateAction_0; }

		//"delegate"
		public Keyword getDelegateKeyword_1() { return cDelegateKeyword_1; }
	}

	public class ExternalOpenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalOpen");
		private final Assignment cUrlAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cUrlScalarExpressionParserRuleCall_0 = (RuleCall)cUrlAssignment.eContents().get(0);
		
		//ExternalOpen:
		//	url=ScalarExpression;
		public ParserRule getRule() { return rule; }

		//url=ScalarExpression
		public Assignment getUrlAssignment() { return cUrlAssignment; }

		//ScalarExpression
		public RuleCall getUrlScalarExpressionParserRuleCall_0() { return cUrlScalarExpressionParserRuleCall_0; }
	}

	public class ViewCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cViewAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cViewViewCrossReference_0_0 = (CrossReference)cViewAssignment_0.eContents().get(0);
		private final RuleCall cViewViewIDTerminalRuleCall_0_0_1 = (RuleCall)cViewViewCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProviderAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProviderProviderConstructionParserRuleCall_2_0 = (RuleCall)cProviderAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionNestedObjectReferenceParserRuleCall_4_0 = (RuleCall)cActionAssignment_4.eContents().get(0);
		
		//ViewCall:
		//	view=[View] "(" provider=ProviderConstruction ")"? action=NestedObjectReference?;
		public ParserRule getRule() { return rule; }

		//view=[View] "(" provider=ProviderConstruction ")"? action=NestedObjectReference?
		public Group getGroup() { return cGroup; }

		//view=[View]
		public Assignment getViewAssignment_0() { return cViewAssignment_0; }

		//[View]
		public CrossReference getViewViewCrossReference_0_0() { return cViewViewCrossReference_0_0; }

		//ID
		public RuleCall getViewViewIDTerminalRuleCall_0_0_1() { return cViewViewIDTerminalRuleCall_0_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//provider=ProviderConstruction
		public Assignment getProviderAssignment_2() { return cProviderAssignment_2; }

		//ProviderConstruction
		public RuleCall getProviderProviderConstructionParserRuleCall_2_0() { return cProviderProviderConstructionParserRuleCall_2_0; }

		//")"?
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//action=NestedObjectReference?
		public Assignment getActionAssignment_4() { return cActionAssignment_4; }

		//NestedObjectReference
		public RuleCall getActionNestedObjectReferenceParserRuleCall_4_0() { return cActionNestedObjectReferenceParserRuleCall_4_0; }
	}
	
	
	public class CellTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CellType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDefaultEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDefaultDefaultKeyword_0_0 = (Keyword)cDefaultEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDefaultWithDisclosureEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDefaultWithDisclosureDefaultWithDisclosureKeyword_1_0 = (Keyword)cDefaultWithDisclosureEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cValue2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cValue2Value2Keyword_2_0 = (Keyword)cValue2EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDoubleDoubleKeyword_3_0 = (Keyword)cDoubleEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSubtitleEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSubtitleSubtitleKeyword_4_0 = (Keyword)cSubtitleEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMapsEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMapsMapKeyword_5_0 = (Keyword)cMapsEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum CellType:
		//	default="Default" | defaultWithDisclosure="DefaultWithDisclosure" | value2="Value2" | double="Double" |
		//	subtitle="Subtitle" | maps="Map";
		public EnumRule getRule() { return rule; }

		//default="Default" | defaultWithDisclosure="DefaultWithDisclosure" | value2="Value2" | double="Double" |
		//subtitle="Subtitle" | maps="Map"
		public Alternatives getAlternatives() { return cAlternatives; }

		//default="Default"
		public EnumLiteralDeclaration getDefaultEnumLiteralDeclaration_0() { return cDefaultEnumLiteralDeclaration_0; }

		//"Default"
		public Keyword getDefaultDefaultKeyword_0_0() { return cDefaultDefaultKeyword_0_0; }

		//defaultWithDisclosure="DefaultWithDisclosure"
		public EnumLiteralDeclaration getDefaultWithDisclosureEnumLiteralDeclaration_1() { return cDefaultWithDisclosureEnumLiteralDeclaration_1; }

		//"DefaultWithDisclosure"
		public Keyword getDefaultWithDisclosureDefaultWithDisclosureKeyword_1_0() { return cDefaultWithDisclosureDefaultWithDisclosureKeyword_1_0; }

		//value2="Value2"
		public EnumLiteralDeclaration getValue2EnumLiteralDeclaration_2() { return cValue2EnumLiteralDeclaration_2; }

		//"Value2"
		public Keyword getValue2Value2Keyword_2_0() { return cValue2Value2Keyword_2_0; }

		//double="Double"
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_3() { return cDoubleEnumLiteralDeclaration_3; }

		//"Double"
		public Keyword getDoubleDoubleKeyword_3_0() { return cDoubleDoubleKeyword_3_0; }

		//subtitle="Subtitle"
		public EnumLiteralDeclaration getSubtitleEnumLiteralDeclaration_4() { return cSubtitleEnumLiteralDeclaration_4; }

		//"Subtitle"
		public Keyword getSubtitleSubtitleKeyword_4_0() { return cSubtitleSubtitleKeyword_4_0; }

		//maps="Map"
		public EnumLiteralDeclaration getMapsEnumLiteralDeclaration_5() { return cMapsEnumLiteralDeclaration_5; }

		//"Map"
		public Keyword getMapsMapKeyword_5_0() { return cMapsMapKeyword_5_0; }
	}

	public class PositionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Position");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDefaultEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDefaultLeftKeyword_0_0 = (Keyword)cDefaultEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCenterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCenterCenterKeyword_1_0 = (Keyword)cCenterEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRightEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRightRightKeyword_2_0 = (Keyword)cRightEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Position:
		//	default="left" | center | right;
		public EnumRule getRule() { return rule; }

		//default="left" | center | right
		public Alternatives getAlternatives() { return cAlternatives; }

		//default="left"
		public EnumLiteralDeclaration getDefaultEnumLiteralDeclaration_0() { return cDefaultEnumLiteralDeclaration_0; }

		//"left"
		public Keyword getDefaultLeftKeyword_0_0() { return cDefaultLeftKeyword_0_0; }

		//center
		public EnumLiteralDeclaration getCenterEnumLiteralDeclaration_1() { return cCenterEnumLiteralDeclaration_1; }

		//"center"
		public Keyword getCenterCenterKeyword_1_0() { return cCenterCenterKeyword_1_0; }

		//right
		public EnumLiteralDeclaration getRightEnumLiteralDeclaration_2() { return cRightEnumLiteralDeclaration_2; }

		//"right"
		public Keyword getRightRightKeyword_2_0() { return cRightRightKeyword_2_0; }
	}
	
	private ApplauseModelElements pApplauseModel;
	private ModelElementElements pModelElement;
	private NavigationBarItemElements pNavigationBarItem;
	private VariableDeclarationElements pVariableDeclaration;
	private TypeDescriptionElements pTypeDescription;
	private ParameterElements pParameter;
	private ObjectReferenceElements pObjectReference;
	private NestedObjectReferenceElements pNestedObjectReference;
	private ExpressionElements pExpression;
	private ScalarExpressionElements pScalarExpression;
	private CollectionExpressionElements pCollectionExpression;
	private StringLiteralElements pStringLiteral;
	private PredefinedParameterElements pPredefinedParameter;
	private SectionIdElements pSectionId;
	private StringFunctionElements pStringFunction;
	private CollectionLiteralElements pCollectionLiteral;
	private CollectionFunctionElements pCollectionFunction;
	private ApplicationElements pApplication;
	private ButtonElements pButton;
	private ConstantElements pConstant;
	private TypeElements pType;
	private SimpleTypeElements pSimpleType;
	private EntityElements pEntity;
	private PropertyElements pProperty;
	private ContentProviderElements pContentProvider;
	private ProviderConstructionElements pProviderConstruction;
	private ViewElements pView;
	private SectionedViewElements pSectionedView;
	private TableViewElements pTableView;
	private DetailsViewElements pDetailsView;
	private WebViewElements pWebView;
	private CustomViewElements pCustomView;
	private ActionElements pAction;
	private ViewHeaderElements pViewHeader;
	private ViewSectionElements pViewSection;
	private ViewForAllSectionsElements pViewForAllSections;
	private SectionCellElements pSectionCell;
	private CellTypeElements unknownRuleCellType;
	private PositionElements unknownRulePosition;
	private CollectionIteratorElements pCollectionIterator;
	private ViewActionElements pViewAction;
	private ActionDelegateElements pActionDelegate;
	private ExternalOpenElements pExternalOpen;
	private ViewCallElements pViewCall;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ApplauseDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ApplauseModel:
	//	application=Application elements+=ModelElement*;
	public ApplauseModelElements getApplauseModelAccess() {
		return (pApplauseModel != null) ? pApplauseModel : (pApplauseModel = new ApplauseModelElements());
	}
	
	public ParserRule getApplauseModelRule() {
		return getApplauseModelAccess().getRule();
	}

	//ModelElement:
	//	Type | ContentProvider | View | Constant | NavigationBarItem;
	public ModelElementElements getModelElementAccess() {
		return (pModelElement != null) ? pModelElement : (pModelElement = new ModelElementElements());
	}
	
	public ParserRule getModelElementRule() {
		return getModelElementAccess().getRule();
	}

	//NavigationBarItem:
	//	"navigationBar." position=Position "=" "{" (("icon" "=" icon=ScalarExpression)? & ("triggers" "="
	//	triggers+=ScalarExpression ("," triggers+=ScalarExpression)*)?) "}";
	public NavigationBarItemElements getNavigationBarItemAccess() {
		return (pNavigationBarItem != null) ? pNavigationBarItem : (pNavigationBarItem = new NavigationBarItemElements());
	}
	
	public ParserRule getNavigationBarItemRule() {
		return getNavigationBarItemAccess().getRule();
	}

	//// -------------------------------------------
	//// General
	//// common supertype to allow variableReferences
	//VariableDeclaration:
	//	Parameter | Property | CollectionIterator;
	public VariableDeclarationElements getVariableDeclarationAccess() {
		return (pVariableDeclaration != null) ? pVariableDeclaration : (pVariableDeclaration = new VariableDeclarationElements());
	}
	
	public ParserRule getVariableDeclarationRule() {
		return getVariableDeclarationAccess().getRule();
	}

	//TypeDescription:
	//	type=[Type] many?="[]"?;
	public TypeDescriptionElements getTypeDescriptionAccess() {
		return (pTypeDescription != null) ? pTypeDescription : (pTypeDescription = new TypeDescriptionElements());
	}
	
	public ParserRule getTypeDescriptionRule() {
		return getTypeDescriptionAccess().getRule();
	}

	//Parameter:
	//	description=TypeDescription name=ID;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//ObjectReference:
	//	object=[VariableDeclaration] tail=NestedObjectReference?;
	public ObjectReferenceElements getObjectReferenceAccess() {
		return (pObjectReference != null) ? pObjectReference : (pObjectReference = new ObjectReferenceElements());
	}
	
	public ParserRule getObjectReferenceRule() {
		return getObjectReferenceAccess().getRule();
	}

	////workaround: NestedObjectReference as separate rule to guide the content 
	////   assist parser technically could have been include in ObjectReference like
	////   ObjectReference:
	////     object=[VariableDeclaration] ('.' tail=ObjectReference)?;
	//NestedObjectReference returns ObjectReference:
	//	"." object=[VariableDeclaration] tail=NestedObjectReference?;
	public NestedObjectReferenceElements getNestedObjectReferenceAccess() {
		return (pNestedObjectReference != null) ? pNestedObjectReference : (pNestedObjectReference = new NestedObjectReferenceElements());
	}
	
	public ParserRule getNestedObjectReferenceRule() {
		return getNestedObjectReferenceAccess().getRule();
	}

	//Expression:
	//	StringLiteral | StringFunction | CollectionLiteral | CollectionFunction | ObjectReference;
	public ExpressionElements getExpressionAccess() {
		return (pExpression != null) ? pExpression : (pExpression = new ExpressionElements());
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}

	//ScalarExpression:
	//	StringLiteral | StringFunction | ObjectReference;
	public ScalarExpressionElements getScalarExpressionAccess() {
		return (pScalarExpression != null) ? pScalarExpression : (pScalarExpression = new ScalarExpressionElements());
	}
	
	public ParserRule getScalarExpressionRule() {
		return getScalarExpressionAccess().getRule();
	}

	//CollectionExpression:
	//	CollectionLiteral | CollectionFunction | ObjectReference;
	public CollectionExpressionElements getCollectionExpressionAccess() {
		return (pCollectionExpression != null) ? pCollectionExpression : (pCollectionExpression = new CollectionExpressionElements());
	}
	
	public ParserRule getCollectionExpressionRule() {
		return getCollectionExpressionAccess().getRule();
	}

	//StringLiteral:
	//	value=STRING;
	public StringLiteralElements getStringLiteralAccess() {
		return (pStringLiteral != null) ? pStringLiteral : (pStringLiteral = new StringLiteralElements());
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//PredefinedParameter:
	//	SectionId;
	public PredefinedParameterElements getPredefinedParameterAccess() {
		return (pPredefinedParameter != null) ? pPredefinedParameter : (pPredefinedParameter = new PredefinedParameterElements());
	}
	
	public ParserRule getPredefinedParameterRule() {
		return getPredefinedParameterAccess().getRule();
	}

	//SectionId:
	//	{SectionId} "section.id";
	public SectionIdElements getSectionIdAccess() {
		return (pSectionId != null) ? pSectionId : (pSectionId = new SectionIdElements());
	}
	
	public ParserRule getSectionIdRule() {
		return getSectionIdAccess().getRule();
	}

	//StringFunction:
	//	{StringConcat} "(" values+=ScalarExpression+ ")" | {StringReplace} "replace(" value=ScalarExpression ","
	//	match=ScalarExpression "," replacement=ScalarExpression ")" | {StringUrlConform} "urlconform(" value=ScalarExpression
	//	")";
	public StringFunctionElements getStringFunctionAccess() {
		return (pStringFunction != null) ? pStringFunction : (pStringFunction = new StringFunctionElements());
	}
	
	public ParserRule getStringFunctionRule() {
		return getStringFunctionAccess().getRule();
	}

	//CollectionLiteral:
	//	"[" items+=ScalarExpression ("," items+=ScalarExpression)* "]";
	public CollectionLiteralElements getCollectionLiteralAccess() {
		return (pCollectionLiteral != null) ? pCollectionLiteral : (pCollectionLiteral = new CollectionLiteralElements());
	}
	
	public ParserRule getCollectionLiteralRule() {
		return getCollectionLiteralAccess().getRule();
	}

	//CollectionFunction:
	//	{StringSplit} "split(" value=ScalarExpression "," delimiter=ScalarExpression ")";
	public CollectionFunctionElements getCollectionFunctionAccess() {
		return (pCollectionFunction != null) ? pCollectionFunction : (pCollectionFunction = new CollectionFunctionElements());
	}
	
	public ParserRule getCollectionFunctionRule() {
		return getCollectionFunctionAccess().getRule();
	}

	//// -------------------------------------------
	//// applications
	//Application:
	//	(tabbarApplication?="tabbarApp" | "app") name=ID "{" "appicon" "=" appicon=ScalarExpression "splash" "="
	//	splash=ScalarExpression "mainview" "=" mainview=ViewCall buttons+=Button* "}";
	public ApplicationElements getApplicationAccess() {
		return (pApplication != null) ? pApplication : (pApplication = new ApplicationElements());
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}

	//Button:
	//	"button" "{" ("title" "=" title=ScalarExpression)? & ("icon" "=" icon=ScalarExpression)? & ("view" "=" view=ViewCall |
	//	"handler" "=" handler=STRING) "}";
	public ButtonElements getButtonAccess() {
		return (pButton != null) ? pButton : (pButton = new ButtonElements());
	}
	
	public ParserRule getButtonRule() {
		return getButtonAccess().getRule();
	}

	//Constant returns VariableDeclaration:
	//	{Constant} "const" name=ID language+=("de=" | "en=")? value+=ScalarExpression ("," language+=("de=" | "en=")?
	//	value+=ScalarExpression)*;
	public ConstantElements getConstantAccess() {
		return (pConstant != null) ? pConstant : (pConstant = new ConstantElements());
	}
	
	public ParserRule getConstantRule() {
		return getConstantAccess().getRule();
	}

	//// -------------------------------------------
	//// types
	//Type:
	//	SimpleType | Entity;
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//SimpleType:
	//	"type" name=ID "mapsTo" platformType=STRING;
	public SimpleTypeElements getSimpleTypeAccess() {
		return (pSimpleType != null) ? pSimpleType : (pSimpleType = new SimpleTypeElements());
	}
	
	public ParserRule getSimpleTypeRule() {
		return getSimpleTypeAccess().getRule();
	}

	//Entity:
	//	"entity" name=ID ("extends" extends=[Entity])? "{" properties+=Property* "}";
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Property:
	//	derived?="derived"? description=TypeDescription name=ID;
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//// -------------------------------------------
	//// content provider
	//ContentProvider:
	//	"contentprovider" name=ID ("(" parameter=Parameter ")")? (("returns" | resolver?="resolves") type=[Type] many?="[]"?)?
	//	"fetches" (xml?="XML" | html?="HTML") "from" url=ScalarExpression ("selects" selection=ScalarExpression)?;
	public ContentProviderElements getContentProviderAccess() {
		return (pContentProvider != null) ? pContentProvider : (pContentProvider = new ContentProviderElements());
	}
	
	public ParserRule getContentProviderRule() {
		return getContentProviderAccess().getRule();
	}

	//ProviderConstruction:
	//	provider=[ContentProvider] "(" (argument=Expression | predefinedParameter=PredefinedParameter)? ")";
	public ProviderConstructionElements getProviderConstructionAccess() {
		return (pProviderConstruction != null) ? pProviderConstruction : (pProviderConstruction = new ProviderConstructionElements());
	}
	
	public ParserRule getProviderConstructionRule() {
		return getProviderConstructionAccess().getRule();
	}

	//// -------------------------------------------
	//// views
	//View:
	//	SectionedView | CustomView | WebView;
	public ViewElements getViewAccess() {
		return (pView != null) ? pView : (pView = new ViewElements());
	}
	
	public ParserRule getViewRule() {
		return getViewAccess().getRule();
	}

	//SectionedView:
	//	TableView | DetailsView;
	public SectionedViewElements getSectionedViewAccess() {
		return (pSectionedView != null) ? pSectionedView : (pSectionedView = new SectionedViewElements());
	}
	
	public ParserRule getSectionedViewRule() {
		return getSectionedViewAccess().getRule();
	}

	//TableView:
	//	"tableview" name=ID ("(" content=Parameter ")")? (":" superView=[SectionedView])? "{" ("title" "="
	//	title=ScalarExpression)? buttons+=Button* forAllSections=ViewForAllSections? sections+=ViewSection* ("action" "="
	//	actions+=Action ("," actions+=Action)*)? "}";
	public TableViewElements getTableViewAccess() {
		return (pTableView != null) ? pTableView : (pTableView = new TableViewElements());
	}
	
	public ParserRule getTableViewRule() {
		return getTableViewAccess().getRule();
	}

	//DetailsView:
	//	"detailsview" name=ID ("(" content=Parameter ")")? (":" superView=[SectionedView])? "{" "title" "="
	//	title=ScalarExpression buttons+=Button* header=ViewHeader? forAllSections=ViewForAllSections? sections+=ViewSection*
	//	("action" "=" actions+=Action ("," actions+=Action)*)? "}";
	public DetailsViewElements getDetailsViewAccess() {
		return (pDetailsView != null) ? pDetailsView : (pDetailsView = new DetailsViewElements());
	}
	
	public ParserRule getDetailsViewRule() {
		return getDetailsViewAccess().getRule();
	}

	//WebView:
	//	"webview" name=ID "{" "title" "=" title=ScalarExpression buttons+=Button* header=ViewHeader?
	//	forAllSections=ViewForAllSections? sections+=ViewSection* ("action" "=" actions+=Action ("," actions+=Action)*)? "}";
	public WebViewElements getWebViewAccess() {
		return (pWebView != null) ? pWebView : (pWebView = new WebViewElements());
	}
	
	public ParserRule getWebViewRule() {
		return getWebViewAccess().getRule();
	}

	//CustomView:
	//	"customview" name=ID ("(" content=Parameter ")")? "implementedBy" objclass=STRING "title" "=" title=ScalarExpression
	//	buttons+=Button* ("action" "=" actions+=Action ("," actions+=Action)*)?;
	public CustomViewElements getCustomViewAccess() {
		return (pCustomView != null) ? pCustomView : (pCustomView = new CustomViewElements());
	}
	
	public ParserRule getCustomViewRule() {
		return getCustomViewAccess().getRule();
	}

	//Action returns VariableDeclaration:
	//	name=ID;
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//ViewHeader:
	//	{ViewHeader} "header" "{" ("title" "=" title=ScalarExpression)? ("subtitle" "=" subtitle=ScalarExpression)? ("details"
	//	"=" details=ScalarExpression)? ("image" "=" image=ScalarExpression)? "}";
	public ViewHeaderElements getViewHeaderAccess() {
		return (pViewHeader != null) ? pViewHeader : (pViewHeader = new ViewHeaderElements());
	}
	
	public ParserRule getViewHeaderRule() {
		return getViewHeaderAccess().getRule();
	}

	//ViewSection:
	//	{ViewSection} "section" "{" ("title" "=" title=ScalarExpression)? cells+=SectionCell* "}";
	public ViewSectionElements getViewSectionAccess() {
		return (pViewSection != null) ? pViewSection : (pViewSection = new ViewSectionElements());
	}
	
	public ParserRule getViewSectionRule() {
		return getViewSectionAccess().getRule();
	}

	//ViewForAllSections:
	//	{ViewForAllSections} "forAllSections" "{" ("title" "=" title=ScalarExpression)? ("content" "="
	//	provider=ProviderConstruction)? cells+=SectionCell* "}";
	public ViewForAllSectionsElements getViewForAllSectionsAccess() {
		return (pViewForAllSections != null) ? pViewForAllSections : (pViewForAllSections = new ViewForAllSectionsElements());
	}
	
	public ParserRule getViewForAllSectionsRule() {
		return getViewForAllSectionsAccess().getRule();
	}

	//SectionCell:
	//	"cell" type=CellType ("foreach" iterator=CollectionIterator)? "{" ("text" "=" text=ScalarExpression)? ("details" "="
	//	details=ScalarExpression)? ("image" "=" image=ScalarExpression)? ("query" "=" query=ScalarExpression)? ("action" "="
	//	action=ViewAction)? ("button" "=" buttonAction=ViewAction)? "}";
	public SectionCellElements getSectionCellAccess() {
		return (pSectionCell != null) ? pSectionCell : (pSectionCell = new SectionCellElements());
	}
	
	public ParserRule getSectionCellRule() {
		return getSectionCellAccess().getRule();
	}

	//enum CellType:
	//	default="Default" | defaultWithDisclosure="DefaultWithDisclosure" | value2="Value2" | double="Double" |
	//	subtitle="Subtitle" | maps="Map";
	public CellTypeElements getCellTypeAccess() {
		return (unknownRuleCellType != null) ? unknownRuleCellType : (unknownRuleCellType = new CellTypeElements());
	}
	
	public EnumRule getCellTypeRule() {
		return getCellTypeAccess().getRule();
	}

	//enum Position:
	//	default="left" | center | right;
	public PositionElements getPositionAccess() {
		return (unknownRulePosition != null) ? unknownRulePosition : (unknownRulePosition = new PositionElements());
	}
	
	public EnumRule getPositionRule() {
		return getPositionAccess().getRule();
	}

	//CollectionIterator:
	//	collection=CollectionExpression "as" name=ID;
	public CollectionIteratorElements getCollectionIteratorAccess() {
		return (pCollectionIterator != null) ? pCollectionIterator : (pCollectionIterator = new CollectionIteratorElements());
	}
	
	public ParserRule getCollectionIteratorRule() {
		return getCollectionIteratorAccess().getRule();
	}

	//ViewAction:
	//	ViewCall | ExternalOpen | ActionDelegate;
	public ViewActionElements getViewActionAccess() {
		return (pViewAction != null) ? pViewAction : (pViewAction = new ViewActionElements());
	}
	
	public ParserRule getViewActionRule() {
		return getViewActionAccess().getRule();
	}

	//ActionDelegate:
	//	{ActionDelegate} "delegate";
	public ActionDelegateElements getActionDelegateAccess() {
		return (pActionDelegate != null) ? pActionDelegate : (pActionDelegate = new ActionDelegateElements());
	}
	
	public ParserRule getActionDelegateRule() {
		return getActionDelegateAccess().getRule();
	}

	//ExternalOpen:
	//	url=ScalarExpression;
	public ExternalOpenElements getExternalOpenAccess() {
		return (pExternalOpen != null) ? pExternalOpen : (pExternalOpen = new ExternalOpenElements());
	}
	
	public ParserRule getExternalOpenRule() {
		return getExternalOpenAccess().getRule();
	}

	//ViewCall:
	//	view=[View] "(" provider=ProviderConstruction ")"? action=NestedObjectReference?;
	public ViewCallElements getViewCallAccess() {
		return (pViewCall != null) ? pViewCall : (pViewCall = new ViewCallElements());
	}
	
	public ParserRule getViewCallRule() {
		return getViewCallAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
