/*
* generated by Xtext
*/
grammar InternalApplauseDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.applause.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.applause.lang.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.applause.lang.services.ApplauseDslGrammarAccess;

}

@parser::members {

 	private ApplauseDslGrammarAccess grammarAccess;
 	
    public InternalApplauseDslParser(TokenStream input, IAstFactory factory, ApplauseDslGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/applause/lang/parser/antlr/internal/InternalApplauseDsl.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ApplauseModel";	
   	}
   	
   	@Override
   	protected ApplauseDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleApplauseModel
entryRuleApplauseModel returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getApplauseModelRule(), currentNode); }
	 iv_ruleApplauseModel=ruleApplauseModel 
	 { $current=$iv_ruleApplauseModel.current; } 
	 EOF 
;

// Rule ApplauseModel
ruleApplauseModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplauseModelAccess().getApplicationApplicationParserRuleCall_0_0(), currentNode); 
	    }
		lv_application_0_0=ruleApplication		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplauseModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"application",
	        		lv_application_0_0, 
	        		"Application", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplauseModelAccess().getElementsModelElementParserRuleCall_1_0(), currentNode); 
	    }
		lv_elements_1_0=ruleModelElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplauseModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elements",
	        		lv_elements_1_0, 
	        		"ModelElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelElementRule(), currentNode); }
	 iv_ruleModelElement=ruleModelElement 
	 { $current=$iv_ruleModelElement.current; } 
	 EOF 
;

// Rule ModelElement
ruleModelElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getTypeParserRuleCall_0(), currentNode); 
    }
    this_Type_0=ruleType
    { 
        $current = $this_Type_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getContentProviderParserRuleCall_1(), currentNode); 
    }
    this_ContentProvider_1=ruleContentProvider
    { 
        $current = $this_ContentProvider_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getViewParserRuleCall_2(), currentNode); 
    }
    this_View_2=ruleView
    { 
        $current = $this_View_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getConstantParserRuleCall_3(), currentNode); 
    }
    this_Constant_3=ruleConstant
    { 
        $current = $this_Constant_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getNavigationBarItemParserRuleCall_4(), currentNode); 
    }
    this_NavigationBarItem_4=ruleNavigationBarItem
    { 
        $current = $this_NavigationBarItem_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleNavigationBarItem
entryRuleNavigationBarItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNavigationBarItemRule(), currentNode); }
	 iv_ruleNavigationBarItem=ruleNavigationBarItem 
	 { $current=$iv_ruleNavigationBarItem.current; } 
	 EOF 
;

// Rule NavigationBarItem
ruleNavigationBarItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'navigationBar.' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getNavigationBarKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNavigationBarItemAccess().getPositionPositionEnumRuleCall_1_0(), currentNode); 
	    }
		lv_position_1_0=rulePosition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNavigationBarItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"position",
	        		lv_position_1_0, 
	        		"Position", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getEqualsSignKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4(), 0);
	 				}
					(	'icon' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getIconKeyword_4_0_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getEqualsSignKeyword_4_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNavigationBarItemAccess().getIconScalarExpressionParserRuleCall_4_0_2_0(), currentNode); 
	    }
		lv_icon_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNavigationBarItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"icon",
	        		lv_icon_7_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4(), 1);
	 				}
					(	'triggers' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getTriggersKeyword_4_1_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getEqualsSignKeyword_4_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNavigationBarItemAccess().getTriggersScalarExpressionParserRuleCall_4_1_2_0(), currentNode); 
	    }
		lv_triggers_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNavigationBarItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"triggers",
	        		lv_triggers_10_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getCommaKeyword_4_1_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNavigationBarItemAccess().getTriggersScalarExpressionParserRuleCall_4_1_3_1_0(), currentNode); 
	    }
		lv_triggers_12_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNavigationBarItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"triggers",
	        		lv_triggers_12_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getNavigationBarItemAccess().getUnorderedGroup_4());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getNavigationBarItemAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;







// Entry rule entryRuleTypeDescription
entryRuleTypeDescription returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeDescriptionRule(), currentNode); }
	 iv_ruleTypeDescription=ruleTypeDescription 
	 { $current=$iv_ruleTypeDescription.current; } 
	 EOF 
;

// Rule TypeDescription
ruleTypeDescription returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDescriptionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTypeDescriptionAccess().getTypeTypeCrossReference_0_0(), "type"); 
	}

)
)(
(
		lv_many_1_0=	'[]' 
    {
        createLeafNode(grammarAccess.getTypeDescriptionAccess().getManyLeftSquareBracketRightSquareBracketKeyword_1_0(), "many"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDescriptionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "many", true, "[]", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParameterRule(), currentNode); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParameterAccess().getDescriptionTypeDescriptionParserRuleCall_0_0(), currentNode); 
	    }
		lv_description_0_0=ruleTypeDescription		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"description",
	        		lv_description_0_0, 
	        		"TypeDescription", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParameterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleObjectReference
entryRuleObjectReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getObjectReferenceRule(), currentNode); }
	 iv_ruleObjectReference=ruleObjectReference 
	 { $current=$iv_ruleObjectReference.current; } 
	 EOF 
;

// Rule ObjectReference
ruleObjectReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectReferenceAccess().getObjectVariableDeclarationCrossReference_0_0(), "object"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getObjectReferenceAccess().getTailNestedObjectReferenceParserRuleCall_1_0(), currentNode); 
	    }
		lv_tail_1_0=ruleNestedObjectReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tail",
	        		lv_tail_1_0, 
	        		"NestedObjectReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleNestedObjectReference
entryRuleNestedObjectReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNestedObjectReferenceRule(), currentNode); }
	 iv_ruleNestedObjectReference=ruleNestedObjectReference 
	 { $current=$iv_ruleNestedObjectReference.current; } 
	 EOF 
;

// Rule NestedObjectReference
ruleNestedObjectReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'.' 
    {
        createLeafNode(grammarAccess.getNestedObjectReferenceAccess().getFullStopKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getNestedObjectReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getNestedObjectReferenceAccess().getObjectVariableDeclarationCrossReference_1_0(), "object"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNestedObjectReferenceAccess().getTailNestedObjectReferenceParserRuleCall_2_0(), currentNode); 
	    }
		lv_tail_2_0=ruleNestedObjectReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNestedObjectReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tail",
	        		lv_tail_2_0, 
	        		"NestedObjectReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getStringLiteralParserRuleCall_0(), currentNode); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getStringFunctionParserRuleCall_1(), currentNode); 
    }
    this_StringFunction_1=ruleStringFunction
    { 
        $current = $this_StringFunction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getCollectionLiteralParserRuleCall_2(), currentNode); 
    }
    this_CollectionLiteral_2=ruleCollectionLiteral
    { 
        $current = $this_CollectionLiteral_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getCollectionFunctionParserRuleCall_3(), currentNode); 
    }
    this_CollectionFunction_3=ruleCollectionFunction
    { 
        $current = $this_CollectionFunction_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getObjectReferenceParserRuleCall_4(), currentNode); 
    }
    this_ObjectReference_4=ruleObjectReference
    { 
        $current = $this_ObjectReference_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleScalarExpression
entryRuleScalarExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScalarExpressionRule(), currentNode); }
	 iv_ruleScalarExpression=ruleScalarExpression 
	 { $current=$iv_ruleScalarExpression.current; } 
	 EOF 
;

// Rule ScalarExpression
ruleScalarExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getStringLiteralParserRuleCall_0(), currentNode); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getStringFunctionParserRuleCall_1(), currentNode); 
    }
    this_StringFunction_1=ruleStringFunction
    { 
        $current = $this_StringFunction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getScalarExpressionAccess().getObjectReferenceParserRuleCall_2(), currentNode); 
    }
    this_ObjectReference_2=ruleObjectReference
    { 
        $current = $this_ObjectReference_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleCollectionExpression
entryRuleCollectionExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionExpressionRule(), currentNode); }
	 iv_ruleCollectionExpression=ruleCollectionExpression 
	 { $current=$iv_ruleCollectionExpression.current; } 
	 EOF 
;

// Rule CollectionExpression
ruleCollectionExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCollectionExpressionAccess().getCollectionLiteralParserRuleCall_0(), currentNode); 
    }
    this_CollectionLiteral_0=ruleCollectionLiteral
    { 
        $current = $this_CollectionLiteral_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCollectionExpressionAccess().getCollectionFunctionParserRuleCall_1(), currentNode); 
    }
    this_CollectionFunction_1=ruleCollectionFunction
    { 
        $current = $this_CollectionFunction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCollectionExpressionAccess().getObjectReferenceParserRuleCall_2(), currentNode); 
    }
    this_ObjectReference_2=ruleObjectReference
    { 
        $current = $this_ObjectReference_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStringLiteralRule(), currentNode); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_value_0_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRulePredefinedParameter
entryRulePredefinedParameter returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPredefinedParameterRule(), currentNode); }
	 iv_rulePredefinedParameter=rulePredefinedParameter 
	 { $current=$iv_rulePredefinedParameter.current; } 
	 EOF 
;

// Rule PredefinedParameter
rulePredefinedParameter returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getPredefinedParameterAccess().getSectionIdParserRuleCall(), currentNode); 
    }
    this_SectionId_0=ruleSectionId
    { 
        $current = $this_SectionId_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleSectionId
entryRuleSectionId returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionIdRule(), currentNode); }
	 iv_ruleSectionId=ruleSectionId 
	 { $current=$iv_ruleSectionId.current; } 
	 EOF 
;

// Rule SectionId
ruleSectionId returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSectionIdAccess().getSectionIdAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSectionIdAccess().getSectionIdAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'section.id' 
    {
        createLeafNode(grammarAccess.getSectionIdAccess().getSectionIdKeyword_1(), null); 
    }
)
;





// Entry rule entryRuleStringFunction
entryRuleStringFunction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStringFunctionRule(), currentNode); }
	 iv_ruleStringFunction=ruleStringFunction 
	 { $current=$iv_ruleStringFunction.current; } 
	 EOF 
;

// Rule StringFunction
ruleStringFunction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
    { 
        temp=factory.create(grammarAccess.getStringFunctionAccess().getStringConcatAction_0_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringFunctionAccess().getStringConcatAction_0_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'(' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getLeftParenthesisKeyword_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getValuesScalarExpressionParserRuleCall_0_2_0(), currentNode); 
	    }
		lv_values_2_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_2_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	')' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_0_3(), null); 
    }
)
    |((
    { 
        temp=factory.create(grammarAccess.getStringFunctionAccess().getStringReplaceAction_1_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringFunctionAccess().getStringReplaceAction_1_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'replace(' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getReplaceKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getValueScalarExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_value_6_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_6_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getCommaKeyword_1_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getMatchScalarExpressionParserRuleCall_1_4_0(), currentNode); 
	    }
		lv_match_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"match",
	        		lv_match_8_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getCommaKeyword_1_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getReplacementScalarExpressionParserRuleCall_1_6_0(), currentNode); 
	    }
		lv_replacement_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"replacement",
	        		lv_replacement_10_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_1_7(), null); 
    }
)
    |((
    { 
        temp=factory.create(grammarAccess.getStringFunctionAccess().getStringUrlConformAction_2_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStringFunctionAccess().getStringUrlConformAction_2_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'urlconform(' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getUrlconformKeyword_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStringFunctionAccess().getValueScalarExpressionParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_value_14_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStringFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_14_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_2_3(), null); 
    }
))
;





// Entry rule entryRuleCollectionLiteral
entryRuleCollectionLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionLiteralRule(), currentNode); }
	 iv_ruleCollectionLiteral=ruleCollectionLiteral 
	 { $current=$iv_ruleCollectionLiteral.current; } 
	 EOF 
;

// Rule CollectionLiteral
ruleCollectionLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'[' 
    {
        createLeafNode(grammarAccess.getCollectionLiteralAccess().getLeftSquareBracketKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionLiteralAccess().getItemsScalarExpressionParserRuleCall_1_0(), currentNode); 
	    }
		lv_items_1_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_1_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCollectionLiteralAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionLiteralAccess().getItemsScalarExpressionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_items_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"items",
	        		lv_items_3_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getCollectionLiteralAccess().getRightSquareBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleCollectionFunction
entryRuleCollectionFunction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionFunctionRule(), currentNode); }
	 iv_ruleCollectionFunction=ruleCollectionFunction 
	 { $current=$iv_ruleCollectionFunction.current; } 
	 EOF 
;

// Rule CollectionFunction
ruleCollectionFunction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getCollectionFunctionAccess().getStringSplitAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getCollectionFunctionAccess().getStringSplitAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'split(' 
    {
        createLeafNode(grammarAccess.getCollectionFunctionAccess().getSplitKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionFunctionAccess().getValueScalarExpressionParserRuleCall_2_0(), currentNode); 
	    }
		lv_value_2_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_2_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getCollectionFunctionAccess().getCommaKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionFunctionAccess().getDelimiterScalarExpressionParserRuleCall_4_0(), currentNode); 
	    }
		lv_delimiter_4_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionFunctionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"delimiter",
	        		lv_delimiter_4_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getCollectionFunctionAccess().getRightParenthesisKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getApplicationRule(), currentNode); }
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current; } 
	 EOF 
;

// Rule Application
ruleApplication returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		lv_tabbarApplication_0_0=	'tabbarApp' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getTabbarApplicationTabbarAppKeyword_0_0_0(), "tabbarApplication"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "tabbarApplication", true, "tabbarApp", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |	'app' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getAppKeyword_0_1(), null); 
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'appicon' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getAppiconKeyword_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getAppiconScalarExpressionParserRuleCall_5_0(), currentNode); 
	    }
		lv_appicon_6_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"appicon",
	        		lv_appicon_6_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'splash' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getSplashKeyword_6(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getEqualsSignKeyword_7(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getSplashScalarExpressionParserRuleCall_8_0(), currentNode); 
	    }
		lv_splash_9_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"splash",
	        		lv_splash_9_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'mainview' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getMainviewKeyword_9(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getEqualsSignKeyword_10(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getMainviewViewCallParserRuleCall_11_0(), currentNode); 
	    }
		lv_mainview_12_0=ruleViewCall		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mainview",
	        		lv_mainview_12_0, 
	        		"ViewCall", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getButtonsButtonParserRuleCall_12_0(), currentNode); 
	    }
		lv_buttons_13_0=ruleButton		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"buttons",
	        		lv_buttons_13_0, 
	        		"Button", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_13(), null); 
    }
)
;





// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getButtonRule(), currentNode); }
	 iv_ruleButton=ruleButton 
	 { $current=$iv_ruleButton.current; } 
	 EOF 
;

// Rule Button
ruleButton returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getButtonAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonAccess().getUnorderedGroup(), 0);
	 				}
					(	'button' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getButtonKeyword_0_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getLeftCurlyBracketKeyword_0_1(), null); 
    }
(	'title' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getTitleKeyword_0_2_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getEqualsSignKeyword_0_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getButtonAccess().getTitleScalarExpressionParserRuleCall_0_2_2_0(), currentNode); 
	    }
		lv_title_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonAccess().getUnorderedGroup(), 1);
	 				}
					(	'icon' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getIconKeyword_1_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getEqualsSignKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getButtonAccess().getIconScalarExpressionParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_icon_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"icon",
	        		lv_icon_8_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonAccess().getUnorderedGroup(), 2);
	 				}
					(((	'view' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getViewKeyword_2_0_0_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getEqualsSignKeyword_2_0_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getButtonAccess().getViewViewCallParserRuleCall_2_0_0_2_0(), currentNode); 
	    }
		lv_view_11_0=ruleViewCall		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"view",
	        		lv_view_11_0, 
	        		"ViewCall", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'handler' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getHandlerKeyword_2_0_1_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getEqualsSignKeyword_2_0_1_1(), null); 
    }
(
(
		lv_handler_14_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getButtonAccess().getHandlerSTRINGTerminalRuleCall_2_0_1_2_0(), "handler"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"handler",
	        		lv_handler_14_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))	'}' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getRightCurlyBracketKeyword_2_1(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getButtonAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getButtonAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstantRule(), currentNode); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getConstantAccess().getConstantAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConstantAccess().getConstantAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'const' 
    {
        createLeafNode(grammarAccess.getConstantAccess().getConstKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
(
		lv_language_3_1=	'de=' 
    {
        createLeafNode(grammarAccess.getConstantAccess().getLanguageDeKeyword_3_0_0(), "language"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "language", lv_language_3_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_language_3_2=	'en=' 
    {
        createLeafNode(grammarAccess.getConstantAccess().getLanguageEnKeyword_3_0_1(), "language"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "language", lv_language_3_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstantAccess().getValueScalarExpressionParserRuleCall_4_0(), currentNode); 
	    }
		lv_value_4_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_4_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getConstantAccess().getCommaKeyword_5_0(), null); 
    }
(
(
(
		lv_language_6_1=	'de=' 
    {
        createLeafNode(grammarAccess.getConstantAccess().getLanguageDeKeyword_5_1_0_0(), "language"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "language", lv_language_6_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_language_6_2=	'en=' 
    {
        createLeafNode(grammarAccess.getConstantAccess().getLanguageEnKeyword_5_1_0_1(), "language"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "language", lv_language_6_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstantAccess().getValueScalarExpressionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_value_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_7_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeRule(), currentNode); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0(), currentNode); 
    }
    this_SimpleType_0=ruleSimpleType
    { 
        $current = $this_SimpleType_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall_1(), currentNode); 
    }
    this_Entity_1=ruleEntity
    { 
        $current = $this_Entity_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSimpleType
entryRuleSimpleType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSimpleTypeRule(), currentNode); }
	 iv_ruleSimpleType=ruleSimpleType 
	 { $current=$iv_ruleSimpleType.current; } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'type' 
    {
        createLeafNode(grammarAccess.getSimpleTypeAccess().getTypeKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSimpleTypeAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'mapsTo' 
    {
        createLeafNode(grammarAccess.getSimpleTypeAccess().getMapsToKeyword_2(), null); 
    }
(
(
		lv_platformType_3_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSimpleTypeAccess().getPlatformTypeSTRINGTerminalRuleCall_3_0(), "platformType"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"platformType",
	        		lv_platformType_3_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEntityRule(), currentNode); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'entity' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getEntityKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'extends' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getExtendsKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0(), "extends"); 
	}

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_4_0(), currentNode); 
	    }
		lv_properties_5_0=ruleProperty		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"properties",
	        		lv_properties_5_0, 
	        		"Property", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPropertyRule(), currentNode); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_derived_0_0=	'derived' 
    {
        createLeafNode(grammarAccess.getPropertyAccess().getDerivedDerivedKeyword_0_0(), "derived"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "derived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPropertyAccess().getDescriptionTypeDescriptionParserRuleCall_1_0(), currentNode); 
	    }
		lv_description_1_0=ruleTypeDescription		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"description",
	        		lv_description_1_0, 
	        		"TypeDescription", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPropertyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleContentProvider
entryRuleContentProvider returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContentProviderRule(), currentNode); }
	 iv_ruleContentProvider=ruleContentProvider 
	 { $current=$iv_ruleContentProvider.current; } 
	 EOF 
;

// Rule ContentProvider
ruleContentProvider returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'contentprovider' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getContentproviderKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getContentProviderAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContentProviderAccess().getParameterParameterParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_parameter_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameter",
	        		lv_parameter_3_0, 
	        		"Parameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getRightParenthesisKeyword_2_2(), null); 
    }
)?((	'returns' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getReturnsKeyword_3_0_0(), null); 
    }

    |(
(
		lv_resolver_6_0=	'resolves' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getResolverResolvesKeyword_3_0_1_0(), "resolver"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "resolver", true, "resolves", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getContentProviderAccess().getTypeTypeCrossReference_3_1_0(), "type"); 
	}

)
)(
(
		lv_many_8_0=	'[]' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getManyLeftSquareBracketRightSquareBracketKeyword_3_2_0(), "many"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "many", true, "[]", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)?	'fetches' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getFetchesKeyword_4(), null); 
    }
((
(
		lv_xml_10_0=	'XML' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getXmlXMLKeyword_5_0_0(), "xml"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "xml", true, "XML", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_html_11_0=	'HTML' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getHtmlHTMLKeyword_5_1_0(), "html"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "html", true, "HTML", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))	'from' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getFromKeyword_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContentProviderAccess().getUrlScalarExpressionParserRuleCall_7_0(), currentNode); 
	    }
		lv_url_13_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_13_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'selects' 
    {
        createLeafNode(grammarAccess.getContentProviderAccess().getSelectsKeyword_8_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContentProviderAccess().getSelectionScalarExpressionParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_selection_15_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentProviderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"selection",
	        		lv_selection_15_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleProviderConstruction
entryRuleProviderConstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProviderConstructionRule(), currentNode); }
	 iv_ruleProviderConstruction=ruleProviderConstruction 
	 { $current=$iv_ruleProviderConstruction.current; } 
	 EOF 
;

// Rule ProviderConstruction
ruleProviderConstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getProviderConstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getProviderConstructionAccess().getProviderContentProviderCrossReference_0_0(), "provider"); 
	}

)
)	'(' 
    {
        createLeafNode(grammarAccess.getProviderConstructionAccess().getLeftParenthesisKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProviderConstructionAccess().getArgumentExpressionParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_argument_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProviderConstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"argument",
	        		lv_argument_2_0, 
	        		"Expression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProviderConstructionAccess().getPredefinedParameterPredefinedParameterParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_predefinedParameter_3_0=rulePredefinedParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProviderConstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"predefinedParameter",
	        		lv_predefinedParameter_3_0, 
	        		"PredefinedParameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	')' 
    {
        createLeafNode(grammarAccess.getProviderConstructionAccess().getRightParenthesisKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleView
entryRuleView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewRule(), currentNode); }
	 iv_ruleView=ruleView 
	 { $current=$iv_ruleView.current; } 
	 EOF 
;

// Rule View
ruleView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getViewAccess().getSectionedViewParserRuleCall_0(), currentNode); 
    }
    this_SectionedView_0=ruleSectionedView
    { 
        $current = $this_SectionedView_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getViewAccess().getCustomViewParserRuleCall_1(), currentNode); 
    }
    this_CustomView_1=ruleCustomView
    { 
        $current = $this_CustomView_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getViewAccess().getWebViewParserRuleCall_2(), currentNode); 
    }
    this_WebView_2=ruleWebView
    { 
        $current = $this_WebView_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSectionedView
entryRuleSectionedView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionedViewRule(), currentNode); }
	 iv_ruleSectionedView=ruleSectionedView 
	 { $current=$iv_ruleSectionedView.current; } 
	 EOF 
;

// Rule SectionedView
ruleSectionedView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSectionedViewAccess().getTableViewParserRuleCall_0(), currentNode); 
    }
    this_TableView_0=ruleTableView
    { 
        $current = $this_TableView_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSectionedViewAccess().getDetailsViewParserRuleCall_1(), currentNode); 
    }
    this_DetailsView_1=ruleDetailsView
    { 
        $current = $this_DetailsView_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleTableView
entryRuleTableView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTableViewRule(), currentNode); }
	 iv_ruleTableView=ruleTableView 
	 { $current=$iv_ruleTableView.current; } 
	 EOF 
;

// Rule TableView
ruleTableView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tableview' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getTableviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTableViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getContentParameterParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_content_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"content",
	        		lv_content_3_0, 
	        		"Parameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getRightParenthesisKeyword_2_2(), null); 
    }
)?(	':' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTableViewAccess().getSuperViewSectionedViewCrossReference_3_1_0(), "superView"); 
	}

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'title' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getTitleKeyword_5_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getEqualsSignKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getTitleScalarExpressionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_title_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_10_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getButtonsButtonParserRuleCall_6_0(), currentNode); 
	    }
		lv_buttons_11_0=ruleButton		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"buttons",
	        		lv_buttons_11_0, 
	        		"Button", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getForAllSectionsViewForAllSectionsParserRuleCall_7_0(), currentNode); 
	    }
		lv_forAllSections_12_0=ruleViewForAllSections		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"forAllSections",
	        		lv_forAllSections_12_0, 
	        		"ViewForAllSections", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getSectionsViewSectionParserRuleCall_8_0(), currentNode); 
	    }
		lv_sections_13_0=ruleViewSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sections",
	        		lv_sections_13_0, 
	        		"ViewSection", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(	'action' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getActionKeyword_9_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getEqualsSignKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getActionsActionParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_actions_16_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_16_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getCommaKeyword_9_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTableViewAccess().getActionsActionParserRuleCall_9_3_1_0(), currentNode); 
	    }
		lv_actions_18_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTableViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_18_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getTableViewAccess().getRightCurlyBracketKeyword_10(), null); 
    }
)
;





// Entry rule entryRuleDetailsView
entryRuleDetailsView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDetailsViewRule(), currentNode); }
	 iv_ruleDetailsView=ruleDetailsView 
	 { $current=$iv_ruleDetailsView.current; } 
	 EOF 
;

// Rule DetailsView
ruleDetailsView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'detailsview' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getDetailsviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDetailsViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getContentParameterParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_content_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"content",
	        		lv_content_3_0, 
	        		"Parameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getRightParenthesisKeyword_2_2(), null); 
    }
)?(	':' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDetailsViewAccess().getSuperViewSectionedViewCrossReference_3_1_0(), "superView"); 
	}

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
	'title' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getTitleKeyword_5(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getEqualsSignKeyword_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getTitleScalarExpressionParserRuleCall_7_0(), currentNode); 
	    }
		lv_title_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_10_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getButtonsButtonParserRuleCall_8_0(), currentNode); 
	    }
		lv_buttons_11_0=ruleButton		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"buttons",
	        		lv_buttons_11_0, 
	        		"Button", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getHeaderViewHeaderParserRuleCall_9_0(), currentNode); 
	    }
		lv_header_12_0=ruleViewHeader		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"header",
	        		lv_header_12_0, 
	        		"ViewHeader", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getForAllSectionsViewForAllSectionsParserRuleCall_10_0(), currentNode); 
	    }
		lv_forAllSections_13_0=ruleViewForAllSections		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"forAllSections",
	        		lv_forAllSections_13_0, 
	        		"ViewForAllSections", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getSectionsViewSectionParserRuleCall_11_0(), currentNode); 
	    }
		lv_sections_14_0=ruleViewSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sections",
	        		lv_sections_14_0, 
	        		"ViewSection", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(	'action' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getActionKeyword_12_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getEqualsSignKeyword_12_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getActionsActionParserRuleCall_12_2_0(), currentNode); 
	    }
		lv_actions_17_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_17_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getCommaKeyword_12_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDetailsViewAccess().getActionsActionParserRuleCall_12_3_1_0(), currentNode); 
	    }
		lv_actions_19_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDetailsViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_19_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getDetailsViewAccess().getRightCurlyBracketKeyword_13(), null); 
    }
)
;





// Entry rule entryRuleWebView
entryRuleWebView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWebViewRule(), currentNode); }
	 iv_ruleWebView=ruleWebView 
	 { $current=$iv_ruleWebView.current; } 
	 EOF 
;

// Rule WebView
ruleWebView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'webview' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getWebviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getWebViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'title' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getTitleKeyword_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getTitleScalarExpressionParserRuleCall_5_0(), currentNode); 
	    }
		lv_title_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getButtonsButtonParserRuleCall_6_0(), currentNode); 
	    }
		lv_buttons_6_0=ruleButton		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"buttons",
	        		lv_buttons_6_0, 
	        		"Button", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getHeaderViewHeaderParserRuleCall_7_0(), currentNode); 
	    }
		lv_header_7_0=ruleViewHeader		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"header",
	        		lv_header_7_0, 
	        		"ViewHeader", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getForAllSectionsViewForAllSectionsParserRuleCall_8_0(), currentNode); 
	    }
		lv_forAllSections_8_0=ruleViewForAllSections		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"forAllSections",
	        		lv_forAllSections_8_0, 
	        		"ViewForAllSections", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getSectionsViewSectionParserRuleCall_9_0(), currentNode); 
	    }
		lv_sections_9_0=ruleViewSection		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"sections",
	        		lv_sections_9_0, 
	        		"ViewSection", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(	'action' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getActionKeyword_10_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getEqualsSignKeyword_10_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getActionsActionParserRuleCall_10_2_0(), currentNode); 
	    }
		lv_actions_12_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_12_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getCommaKeyword_10_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWebViewAccess().getActionsActionParserRuleCall_10_3_1_0(), currentNode); 
	    }
		lv_actions_14_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWebViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_14_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getWebViewAccess().getRightCurlyBracketKeyword_11(), null); 
    }
)
;





// Entry rule entryRuleCustomView
entryRuleCustomView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCustomViewRule(), currentNode); }
	 iv_ruleCustomView=ruleCustomView 
	 { $current=$iv_ruleCustomView.current; } 
	 EOF 
;

// Rule CustomView
ruleCustomView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'customview' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getCustomviewKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCustomViewAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getContentParameterParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_content_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"content",
	        		lv_content_3_0, 
	        		"Parameter", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getRightParenthesisKeyword_2_2(), null); 
    }
)?	'implementedBy' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getImplementedByKeyword_3(), null); 
    }
(
(
		lv_objclass_6_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getCustomViewAccess().getObjclassSTRINGTerminalRuleCall_4_0(), "objclass"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"objclass",
	        		lv_objclass_6_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'title' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getTitleKeyword_5(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getEqualsSignKeyword_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getTitleScalarExpressionParserRuleCall_7_0(), currentNode); 
	    }
		lv_title_9_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_9_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getButtonsButtonParserRuleCall_8_0(), currentNode); 
	    }
		lv_buttons_10_0=ruleButton		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"buttons",
	        		lv_buttons_10_0, 
	        		"Button", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(	'action' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getActionKeyword_9_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getEqualsSignKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getActionsActionParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_actions_13_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_13_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCustomViewAccess().getCommaKeyword_9_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCustomViewAccess().getActionsActionParserRuleCall_9_3_1_0(), currentNode); 
	    }
		lv_actions_15_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCustomViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_15_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_name_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleViewHeader
entryRuleViewHeader returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewHeaderRule(), currentNode); }
	 iv_ruleViewHeader=ruleViewHeader 
	 { $current=$iv_ruleViewHeader.current; } 
	 EOF 
;

// Rule ViewHeader
ruleViewHeader returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getViewHeaderAccess().getViewHeaderAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getViewHeaderAccess().getViewHeaderAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'header' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getHeaderKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'title' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getTitleKeyword_3_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getEqualsSignKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewHeaderAccess().getTitleScalarExpressionParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_title_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewHeaderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'subtitle' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getSubtitleKeyword_4_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getEqualsSignKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewHeaderAccess().getSubtitleScalarExpressionParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_subtitle_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewHeaderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"subtitle",
	        		lv_subtitle_8_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'details' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getDetailsKeyword_5_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getEqualsSignKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewHeaderAccess().getDetailsScalarExpressionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_details_11_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewHeaderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"details",
	        		lv_details_11_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'image' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getImageKeyword_6_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getEqualsSignKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewHeaderAccess().getImageScalarExpressionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_image_14_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewHeaderRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"image",
	        		lv_image_14_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getViewHeaderAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleViewSection
entryRuleViewSection returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewSectionRule(), currentNode); }
	 iv_ruleViewSection=ruleViewSection 
	 { $current=$iv_ruleViewSection.current; } 
	 EOF 
;

// Rule ViewSection
ruleViewSection returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getViewSectionAccess().getViewSectionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getViewSectionAccess().getViewSectionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'section' 
    {
        createLeafNode(grammarAccess.getViewSectionAccess().getSectionKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getViewSectionAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'title' 
    {
        createLeafNode(grammarAccess.getViewSectionAccess().getTitleKeyword_3_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewSectionAccess().getEqualsSignKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewSectionAccess().getTitleScalarExpressionParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_title_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewSectionAccess().getCellsSectionCellParserRuleCall_4_0(), currentNode); 
	    }
		lv_cells_6_0=ruleSectionCell		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewSectionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"cells",
	        		lv_cells_6_0, 
	        		"SectionCell", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getViewSectionAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleViewForAllSections
entryRuleViewForAllSections returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewForAllSectionsRule(), currentNode); }
	 iv_ruleViewForAllSections=ruleViewForAllSections 
	 { $current=$iv_ruleViewForAllSections.current; } 
	 EOF 
;

// Rule ViewForAllSections
ruleViewForAllSections returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getViewForAllSectionsAccess().getViewForAllSectionsAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getViewForAllSectionsAccess().getViewForAllSectionsAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'forAllSections' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getForAllSectionsKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'title' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getTitleKeyword_3_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getEqualsSignKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewForAllSectionsAccess().getTitleScalarExpressionParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_title_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewForAllSectionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"title",
	        		lv_title_5_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'content' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getContentKeyword_4_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getEqualsSignKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewForAllSectionsAccess().getProviderProviderConstructionParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_provider_8_0=ruleProviderConstruction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewForAllSectionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"provider",
	        		lv_provider_8_0, 
	        		"ProviderConstruction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewForAllSectionsAccess().getCellsSectionCellParserRuleCall_5_0(), currentNode); 
	    }
		lv_cells_9_0=ruleSectionCell		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewForAllSectionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"cells",
	        		lv_cells_9_0, 
	        		"SectionCell", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getViewForAllSectionsAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleSectionCell
entryRuleSectionCell returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionCellRule(), currentNode); }
	 iv_ruleSectionCell=ruleSectionCell 
	 { $current=$iv_ruleSectionCell.current; } 
	 EOF 
;

// Rule SectionCell
ruleSectionCell returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'cell' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getCellKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getTypeCellTypeEnumRuleCall_1_0(), currentNode); 
	    }
		lv_type_1_0=ruleCellType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_1_0, 
	        		"CellType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'foreach' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getForeachKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getIteratorCollectionIteratorParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_iterator_3_0=ruleCollectionIterator		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"iterator",
	        		lv_iterator_3_0, 
	        		"CollectionIterator", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'text' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getTextKeyword_4_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getEqualsSignKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getTextScalarExpressionParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_text_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_7_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'details' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getDetailsKeyword_5_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getEqualsSignKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getDetailsScalarExpressionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_details_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"details",
	        		lv_details_10_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'image' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getImageKeyword_6_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getEqualsSignKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getImageScalarExpressionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_image_13_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"image",
	        		lv_image_13_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'query' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getQueryKeyword_7_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getEqualsSignKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getQueryScalarExpressionParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_query_16_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"query",
	        		lv_query_16_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'action' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getActionKeyword_8_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getEqualsSignKeyword_8_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getActionViewActionParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_action_19_0=ruleViewAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"action",
	        		lv_action_19_0, 
	        		"ViewAction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'button' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getButtonKeyword_9_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getEqualsSignKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionCellAccess().getButtonActionViewActionParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_buttonAction_22_0=ruleViewAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionCellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"buttonAction",
	        		lv_buttonAction_22_0, 
	        		"ViewAction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getSectionCellAccess().getRightCurlyBracketKeyword_10(), null); 
    }
)
;





// Entry rule entryRuleCollectionIterator
entryRuleCollectionIterator returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectionIteratorRule(), currentNode); }
	 iv_ruleCollectionIterator=ruleCollectionIterator 
	 { $current=$iv_ruleCollectionIterator.current; } 
	 EOF 
;

// Rule CollectionIterator
ruleCollectionIterator returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectionIteratorAccess().getCollectionCollectionExpressionParserRuleCall_0_0(), currentNode); 
	    }
		lv_collection_0_0=ruleCollectionExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionIteratorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"collection",
	        		lv_collection_0_0, 
	        		"CollectionExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'as' 
    {
        createLeafNode(grammarAccess.getCollectionIteratorAccess().getAsKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCollectionIteratorAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionIteratorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleViewAction
entryRuleViewAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewActionRule(), currentNode); }
	 iv_ruleViewAction=ruleViewAction 
	 { $current=$iv_ruleViewAction.current; } 
	 EOF 
;

// Rule ViewAction
ruleViewAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getViewActionAccess().getViewCallParserRuleCall_0(), currentNode); 
    }
    this_ViewCall_0=ruleViewCall
    { 
        $current = $this_ViewCall_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getViewActionAccess().getExternalOpenParserRuleCall_1(), currentNode); 
    }
    this_ExternalOpen_1=ruleExternalOpen
    { 
        $current = $this_ExternalOpen_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getViewActionAccess().getActionDelegateParserRuleCall_2(), currentNode); 
    }
    this_ActionDelegate_2=ruleActionDelegate
    { 
        $current = $this_ActionDelegate_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleActionDelegate
entryRuleActionDelegate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionDelegateRule(), currentNode); }
	 iv_ruleActionDelegate=ruleActionDelegate 
	 { $current=$iv_ruleActionDelegate.current; } 
	 EOF 
;

// Rule ActionDelegate
ruleActionDelegate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getActionDelegateAccess().getActionDelegateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getActionDelegateAccess().getActionDelegateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'delegate' 
    {
        createLeafNode(grammarAccess.getActionDelegateAccess().getDelegateKeyword_1(), null); 
    }
)
;





// Entry rule entryRuleExternalOpen
entryRuleExternalOpen returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExternalOpenRule(), currentNode); }
	 iv_ruleExternalOpen=ruleExternalOpen 
	 { $current=$iv_ruleExternalOpen.current; } 
	 EOF 
;

// Rule ExternalOpen
ruleExternalOpen returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExternalOpenAccess().getUrlScalarExpressionParserRuleCall_0(), currentNode); 
	    }
		lv_url_0_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExternalOpenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_0_0, 
	        		"ScalarExpression", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleViewCall
entryRuleViewCall returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getViewCallRule(), currentNode); }
	 iv_ruleViewCall=ruleViewCall 
	 { $current=$iv_ruleViewCall.current; } 
	 EOF 
;

// Rule ViewCall
ruleViewCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getViewCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getViewCallAccess().getViewViewCrossReference_0_0(), "view"); 
	}

)
)	'(' 
    {
        createLeafNode(grammarAccess.getViewCallAccess().getLeftParenthesisKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewCallAccess().getProviderProviderConstructionParserRuleCall_2_0(), currentNode); 
	    }
		lv_provider_2_0=ruleProviderConstruction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"provider",
	        		lv_provider_2_0, 
	        		"ProviderConstruction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	')' 
    {
        createLeafNode(grammarAccess.getViewCallAccess().getRightParenthesisKeyword_3(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getViewCallAccess().getActionNestedObjectReferenceParserRuleCall_4_0(), currentNode); 
	    }
		lv_action_4_0=ruleNestedObjectReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"action",
	        		lv_action_4_0, 
	        		"NestedObjectReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Rule CellType
ruleCellType returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'Default' 
	{
        $current = grammarAccess.getCellTypeAccess().getDefaultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getDefaultEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'DefaultWithDisclosure' 
	{
        $current = grammarAccess.getCellTypeAccess().getDefaultWithDisclosureEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getDefaultWithDisclosureEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'Value2' 
	{
        $current = grammarAccess.getCellTypeAccess().getValue2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getValue2EnumLiteralDeclaration_2(), null); 
    }
)
    |(	'Double' 
	{
        $current = grammarAccess.getCellTypeAccess().getDoubleEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getDoubleEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'Subtitle' 
	{
        $current = grammarAccess.getCellTypeAccess().getSubtitleEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getSubtitleEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'Map' 
	{
        $current = grammarAccess.getCellTypeAccess().getMapsEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getCellTypeAccess().getMapsEnumLiteralDeclaration_5(), null); 
    }
));



// Rule Position
rulePosition returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'left' 
	{
        $current = grammarAccess.getPositionAccess().getDefaultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getPositionAccess().getDefaultEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'center' 
	{
        $current = grammarAccess.getPositionAccess().getCenterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getPositionAccess().getCenterEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'right' 
	{
        $current = grammarAccess.getPositionAccess().getRightEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getPositionAccess().getRightEnumLiteralDeclaration_2(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


